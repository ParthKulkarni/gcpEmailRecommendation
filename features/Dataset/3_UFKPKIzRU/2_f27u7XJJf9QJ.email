X-BeenThere: golang-nuts@googlegroups.com
Received: by 10.101.214.12 with SMTP id r12ls2805623anq.0.p; Thu, 03 Dec 2009 
	10:47:00 -0800 (PST)
Received: by 10.101.208.8 with SMTP id k8mr2016186anq.23.1259866020444;
        Thu, 03 Dec 2009 10:47:00 -0800 (PST)
Received: by 10.101.208.8 with SMTP id k8mr2016185anq.23.1259866020414;
        Thu, 03 Dec 2009 10:47:00 -0800 (PST)
Return-Path: <esko.l...@gmail.com>
Received: from mail-yw0-f152.google.com (mail-yw0-f152.google.com [209.85.211.152])
        by gmr-mx.google.com with ESMTP id 11si188746gxk.13.2009.12.03.10.47.00;
        Thu, 03 Dec 2009 10:47:00 -0800 (PST)
Received-SPF: pass (google.com: domain of esko.l...@gmail.com designates 209.85.211.152 as permitted sender) client-ip=209.85.211.152;
Authentication-Results: gmr-mx.google.com; spf=pass (google.com: domain of esko.l...@gmail.com designates 209.85.211.152 as permitted sender) smtp.mail=esko.l...@gmail.com
Received: by mail-yw0-f152.google.com with SMTP id 16so2206239ywh.15
        for <golan...@googlegroups.com>; Thu, 03 Dec 2009 10:47:00 -0800 (PST)
MIME-Version: 1.0
Received: by 10.101.142.35 with SMTP id u35mr168519ann.44.1259866020253; Thu, 
	03 Dec 2009 10:47:00 -0800 (PST)
Date: Thu, 3 Dec 2009 10:47:00 -0800 (PST)
In-Reply-To: <d7145309-28d0-4c57-b13a-610f0f2be8c5@x15g2000vbr.googlegroups.com>
X-IP: 88.195.117.100
References: <fee5ebc4-c5df-4b22-b5a6-734059cdd87e@f20g2000prn.googlegroups.com> 
	<d7145309-28d0-4c57-b13a-610f0f2be8c5@x15g2000vbr.googlegroups.com>
User-Agent: G2/1.0
X-HTTP-UserAgent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) 
	AppleWebKit/532.3 (KHTML, like Gecko) Chrome/4.0.223.16 Safari/532.3,gzip(gfe),gzip(gfe)
Message-ID: <bc406ca7-dd2c-4b84-bfac-3ee11534d1cd@a21g2000yqc.googlegroups.com>
Subject: Re: predefine const like __FILE__, __LINE__ ?
From: Esko Luontola <esko.l...@gmail.com>
To: golang-nuts <golan...@googlegroups.com>
Content-Type: text/plain; charset=ISO-8859-1

You should be able to get that information with runtime.Caller(). I
haven't yet tried it (I'll need it for my testing framework), but Go
anyways uses something similar for its stack traces, so I think it
will work.
