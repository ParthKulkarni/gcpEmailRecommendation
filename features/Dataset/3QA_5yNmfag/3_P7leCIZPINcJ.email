X-BeenThere: golang-nuts@googlegroups.com
Received: by 10.101.208.8 with SMTP id k8ls2631759anq.3.p; Thu, 03 Dec 2009 
	05:53:33 -0800 (PST)
Received: by 10.101.175.30 with SMTP id c30mr1650283anp.24.1259848412875;
        Thu, 03 Dec 2009 05:53:32 -0800 (PST)
Received: by 10.101.175.30 with SMTP id c30mr1650280anp.24.1259848412846;
        Thu, 03 Dec 2009 05:53:32 -0800 (PST)
Return-Path: <pe...@kivadesigngroupe.com>
Received: from mail-yx0-f158.google.com (mail-yx0-f158.google.com [209.85.210.158])
        by gmr-mx.google.com with ESMTP id 18si156424gxk.3.2009.12.03.05.53.32;
        Thu, 03 Dec 2009 05:53:32 -0800 (PST)
Received-SPF: neutral (google.com: 209.85.210.158 is neither permitted nor denied by best guess record for domain of pe...@kivadesigngroupe.com) client-ip=209.85.210.158;
Authentication-Results: gmr-mx.google.com; spf=neutral (google.com: 209.85.210.158 is neither permitted nor denied by best guess record for domain of pe...@kivadesigngroupe.com) smtp.mail=pe...@kivadesigngroupe.com
Received: by yxe30 with SMTP id 30so1831285yxe.29
        for <golan...@googlegroups.com>; Thu, 03 Dec 2009 05:53:32 -0800 (PST)
MIME-Version: 1.0
Received: by 10.101.81.10 with SMTP id i10mr143958anl.2.1259848412715; Thu, 03 
	Dec 2009 05:53:32 -0800 (PST)
Date: Thu, 3 Dec 2009 05:53:32 -0800 (PST)
In-Reply-To: <4B175E93.5050505@gmail.com>
X-IP: 63.246.177.210
References: <4B1739C7.3070400@gmail.com> <6839b3b7-50f5-4c67-ad41-381f37401229@f20g2000vbl.googlegroups.com> 
	<4B175E93.5050505@gmail.com>
User-Agent: G2/1.0
X-HTTP-UserAgent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_2; en-us) 
	AppleWebKit/531.21.8 (KHTML, like Gecko) Version/4.0.4 Safari/531.21.10,gzip(gfe),gzip(gfe)
Message-ID: <802ff84f-6a67-4811-9e90-d51dde722cee@31g2000vbf.googlegroups.com>
Subject: Re: Could this be the ideal Go CPU?
From: Pete Wilson <pe...@kivadesigngroupe.com>
To: golang-nuts <golan...@googlegroups.com>
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

Actually, there are more problems than those, but the point was to
show that "go-machines" represent known science, could easily be
constructed in modern technology (the T800 was built in 2-micron CMOS,
so 180nm is about 10x smaller linearly and 45 nm is about 40x smaller
linearly, so about 1600x denser - LOTS of cores and memory in the same
area as a T800; and they'd probably clock at 500MHz; and excellent
code density)

I'm not that excited by the Cell. I want a machine which provides
channels in hardware, not one which has a weird processor architecture
and weird shared memory and....

Looked at Tilera? (www.tilera.com). Nice interconnect. Cache coherent
(ecch, but simple for "unix programmers"). Not sure about messaging
(misplaced my documentation)

-- P

On Dec 3, 12:45=A0am, Bob Cunningham <Fly...@gmail.com> wrote:
> The only problems with Transputers are:
> 1. They aren't made any more.
> 2. They topped out around 30 MHz (1% the power of a single core today).
> 3. They have no Go port!
>
> However, you can get Transputer emulators:
> =A0 =A0http://sites.google.com/site/transputeremulator
> =A0 =A0http://www.classiccmp.org/transputer/emulator.htm
>
> Feel free to start porting Go to the Transputer!
>
> There are other mesh processors that can be purchased today, including:
> 40 cores: =A0 =A0 =A0http://www.intellasys.net/
> 64 cores: =A0 =A0 =A0http://www.tilera.com/
> 16-256 cores: =A0http://www.plurality.com/
> 250-300 cores:http://www.picochip.com/
>
> Unfortunately, none use ARM or x86 cores, making a Go port much tougher.
>
> Intel's 48-core SSC should run Go as-is. =A0From what I've read, at least=
 one processor-pair will be able to boot conventionally, much like a dual-c=
ore x86. =A0The remaining cores would most easily be accessed as slave core=
s (similar to how the Cell processor PPE accesses SPEs), to avoid the memor=
y bus saturation associated with feeding 48 cores directly (avoid 48-way SM=
P).
>
> It seems the latency for any core to access memory depends on how many me=
sh hops away it is from a memory controller, so universal memory access may=
 not be desirable in any event: NUMA may be the best you can do, and maybe =
not even that.
>
> Today, the closest readily available processor with a vaguely similar arc=
hitecture would be the PPC-based Cell and PowerXCell processor families. =
=A0Any idea if the Go Crew has plans for a PPC port?
>
> How difficult would it be to assign one or more goroutines to a slave pro=
cessor? =A0Hmm...
>
> Go presently seems limited to a SMP environment. =A0How will Go need to e=
volve to work well in a mesh environment, with slave cores?
>
> Perhaps a port of Go to the Cell (PPC ISA) would be useful to get a head-=
start on this problem. =A0I'd even buy a PS3 if I could run Go on it!
>
> Could Go be the best language for programming the PS3?
>
> -BobC
>
> On 12/02/2009 09:05 PM, Pete Wilson wrote:
>
>
>
> > Google "IMS T424", "IMS T800", "IMST414" :-)
>
> > -- Pete
>
> > On Dec 2, 10:08 pm, Bob Cunningham<Fly...@gmail.com> =A0wrote:
> >> Just stumbled across this in Slashdot:
> >> =A0 =A0http://hardware.slashdot.org/story/09/12/02/215207/Intel-Shows-=
48-Cor...links
> >> Which links to this:
> >> =A0 =A0http://www.pcper.com/article.php?aid=3D825
>
> >> Pay particular attention to the interprocessor messaging system.
>
> >> Does this processor have Go (goroutines and channels) written all over=
 it, or what?
>
> >> I wonder of all those cores are also hyper-threaded...
>
> >> -BobC
