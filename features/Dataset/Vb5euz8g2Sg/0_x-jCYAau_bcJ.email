X-BeenThere: golang-nuts@googlegroups.com
Received: by 10.90.40.27 with SMTP id n27ls3636464agn.0.p; Wed, 02 Dec 2009 
	03:01:46 -0800 (PST)
Received: by 10.90.214.3 with SMTP id m3mr65915agg.5.1259751706327;
        Wed, 02 Dec 2009 03:01:46 -0800 (PST)
Received: by 10.90.214.3 with SMTP id m3mr65913agg.5.1259751706299;
        Wed, 02 Dec 2009 03:01:46 -0800 (PST)
Return-Path: <mal...@gmail.com>
Received: from mail-yw0-f164.google.com (mail-yw0-f164.google.com [209.85.211.164])
        by gmr-mx.google.com with ESMTP id 11si67525gxk.5.2009.12.02.03.01.46;
        Wed, 02 Dec 2009 03:01:46 -0800 (PST)
Received-SPF: pass (google.com: domain of mal...@gmail.com designates 209.85.211.164 as permitted sender) client-ip=209.85.211.164;
Authentication-Results: gmr-mx.google.com; spf=pass (google.com: domain of mal...@gmail.com designates 209.85.211.164 as permitted sender) smtp.mail=mal...@gmail.com
Received: by mail-yw0-f164.google.com with SMTP id 36so97646ywh.16
        for <golan...@googlegroups.com>; Wed, 02 Dec 2009 03:01:46 -0800 (PST)
MIME-Version: 1.0
Received: by 10.150.4.37 with SMTP id 37mr2559ybd.44.1259751706260; Wed, 02 
	Dec 2009 03:01:46 -0800 (PST)
Date: Wed, 2 Dec 2009 03:01:46 -0800 (PST)
X-IP: 76.94.211.188
User-Agent: G2/1.0
X-HTTP-UserAgent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_2; en-us) 
	AppleWebKit/531.21.8 (KHTML, like Gecko) Version/4.0.4 Safari/531.21.10,gzip(gfe),gzip(gfe)
Message-ID: <29cb5d8d-0e93-43ed-8d28-2f097c5265c2@o23g2000vbi.googlegroups.com>
Subject: Package aliasing not working?
From: "Dimiter \"malkia\" Stanev" <mal...@gmail.com>
To: golang-nuts <golan...@googlegroups.com>
Content-Type: text/plain; charset=ISO-8859-1

Consider this:

//malkia ~/p/gotest $ cat main.go
package main

import "fmt"
import v1 "./v1/test"
import v2 "./v2/test"

func main ()
{
	fmt.Printf("main\n");
	v1.Test();
	v2.Test();
}

//malkia ~/p/gotest $ cat v1/test.go
package test

import "fmt"

func Test()
{
	fmt.Printf( "v1 test\n" );
}

//malkia ~/p/gotest $ cat v2/test.go
package test

import "fmt"

func Test()
{
	fmt.Printf( "v2 test\n" );
}

//I'm using my "go runner" to test it, but what happens is this:
//malkia ~/p/gotest $ go main
main
v1 test
v1 test

// So I thought to do it manually...
malkia ~/p/gotest $ cd v1
malkia ~/p/gotest/v1 $ 6g test.go
malkia ~/p/gotest/v1 $ cd ..
malkia ~/p/gotest $ cd v2
malkia ~/p/gotest/v2 $ 6g test.go
malkia ~/p/gotest/v2 $ cd ..
malkia ~/p/gotest $ 6g main.go
malkia ~/p/gotest $ 6l -o main main.6 v1/test.6 v2/test.6
malkia ~/p/gotest $ ./main
main
v1 test
v1 test
malkia ~/p/gotest $ 6l -o main main.6 v2/test.6 v1/test.6
malkia ~/p/gotest $ ./main
main
v2 test
v2 test

This kind of concerns me. This means that everytime I choose a name
for the package I have to make sure that a package with that names
does not already exists (accidentally I might overwrite a function).
For example if I need my own "utf8" package I need to be careful so
that I don't overwrite the system one.

At least some kind of warning/error from the linker would be
appreciated - something saying - test.Test() found in two different
object files.
