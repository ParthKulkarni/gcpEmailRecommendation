X-BeenThere: golang-nuts@googlegroups.com
Received: by 10.150.245.15 with SMTP id s15ls3297761ybh.0.p; Fri, 04 Dec 2009 
	08:18:14 -0800 (PST)
Received: by 10.151.95.25 with SMTP id x25mr3404054ybl.28.1259943494742;
        Fri, 04 Dec 2009 08:18:14 -0800 (PST)
Received: by 10.151.95.25 with SMTP id x25mr3404052ybl.28.1259943494725;
        Fri, 04 Dec 2009 08:18:14 -0800 (PST)
Return-Path: <hel...@gmail.com>
Received: from mail-yx0-f166.google.com (mail-yx0-f166.google.com [209.85.210.166])
        by gmr-mx.google.com with ESMTP id 24si236917ywh.15.2009.12.04.08.18.14;
        Fri, 04 Dec 2009 08:18:14 -0800 (PST)
Received-SPF: pass (google.com: domain of hel...@gmail.com designates 209.85.210.166 as permitted sender) client-ip=209.85.210.166;
Authentication-Results: gmr-mx.google.com; spf=pass (google.com: domain of hel...@gmail.com designates 209.85.210.166 as permitted sender) smtp.mail=hel...@gmail.com
Received: by mail-yx0-f166.google.com with SMTP id 38so3191983yxe.6
        for <golan...@googlegroups.com>; Fri, 04 Dec 2009 08:18:14 -0800 (PST)
MIME-Version: 1.0
Received: by 10.101.131.32 with SMTP id i32mr253487ann.19.1259943494688; Fri, 
	04 Dec 2009 08:18:14 -0800 (PST)
Date: Fri, 4 Dec 2009 08:18:14 -0800 (PST)
In-Reply-To: <344463F1-4339-4EB2-82A8-D23F43EA45C0@gmail.com>
X-IP: 91.39.79.235
References: <DEA177FF-AD3E-4399-918E-648C2811A94D@gmail.com> 
	<9263445f-4303-4367-90d0-8cff34f500c5@m38g2000yqd.googlegroups.com> 
	<344463F1-4339-4EB2-82A8-D23F43EA45C0@gmail.com>
User-Agent: G2/1.0
X-HTTP-UserAgent: Opera/9.80 (X11; Linux i686; U; en) Presto/2.2.15 
	Version/10.10,gzip(gfe),gzip(gfe)
Message-ID: <4b3634fc-1dde-4e50-927b-47f74cf77a1f@j24g2000yqa.googlegroups.com>
Subject: Re: Default interface method implementation
From: Helmar <hel...@gmail.com>
To: golang-nuts <golan...@googlegroups.com>
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable



On Dec 4, 11:10=A0am, Daniel Dilts <dilts....@gmail.com> wrote:
> > why not factoring this method? If it is only sometimes useful, you can
> > simply factor this out:
>
> > typedef Foo interface {
> > =A0...
> > }
>
> > typedef FooX interface {
> > =A0 Foo;
> > =A0 Strange(thing);
> > }
>
> > or so.
>
> The problem being that the function is always necessary, but in the major=
ity of cases a default implementation would be used without being overridde=
n.

I wrote a generator and divided the complex things into smaller,
simpler to understand parts.. See http://code.google.com/p/pdfreader/source=
/browse/graf.in
for the generator.

You do not have things in Go that could be overwritten without a
matching data structure. You can (as I did) simply define an interface
and generate the accessors as you want and make the default accessing
part something doing nothing. This is no Voodoo at all.

Regards,
-Helmar
