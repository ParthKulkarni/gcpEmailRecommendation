X-BeenThere: golang-nuts@googlegroups.com
Received: by 10.90.244.1 with SMTP id r1ls1131994agh.1.p; Fri, 04 Dec 2009 
	01:51:44 -0800 (PST)
Received: by 10.91.31.15 with SMTP id i15mr1713493agj.3.1259920304637;
        Fri, 04 Dec 2009 01:51:44 -0800 (PST)
Received: by 10.91.31.15 with SMTP id i15mr1713491agj.3.1259920304614;
        Fri, 04 Dec 2009 01:51:44 -0800 (PST)
Return-Path: <ma...@duncanpearson.net>
Received: from mail-yw0-f154.google.com (mail-yw0-f154.google.com [209.85.211.154])
        by gmr-mx.google.com with ESMTP id 18si242468gxk.11.2009.12.04.01.51.43;
        Fri, 04 Dec 2009 01:51:43 -0800 (PST)
Received-SPF: neutral (google.com: 209.85.211.154 is neither permitted nor denied by best guess record for domain of ma...@duncanpearson.net) client-ip=209.85.211.154;
Authentication-Results: gmr-mx.google.com; spf=neutral (google.com: 209.85.211.154 is neither permitted nor denied by best guess record for domain of ma...@duncanpearson.net) smtp.mail=ma...@duncanpearson.net
Received: by ywh26 with SMTP id 26so3030840ywh.13
        for <golan...@googlegroups.com>; Fri, 04 Dec 2009 01:51:43 -0800 (PST)
MIME-Version: 1.0
Received: by 10.101.142.35 with SMTP id u35mr229373ann.14.1259920303591; Fri, 
	04 Dec 2009 01:51:43 -0800 (PST)
Date: Fri, 4 Dec 2009 01:51:43 -0800 (PST)
In-Reply-To: <DEA177FF-AD3E-4399-918E-648C2811A94D@gmail.com>
X-IP: 86.156.79.138
References: <DEA177FF-AD3E-4399-918E-648C2811A94D@gmail.com>
User-Agent: G2/1.0
X-HTTP-UserAgent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) 
	AppleWebKit/532.5 (KHTML, like Gecko) Chrome/4.0.249.25 Safari/532.5,gzip(gfe),gzip(gfe)
Message-ID: <16598e83-28e4-4d8f-a44c-d9eab27226fe@b2g2000yqi.googlegroups.com>
Subject: Re: Default interface method implementation
From: Duncan Pearson <ma...@duncanpearson.net>
To: golang-nuts <golan...@googlegroups.com>
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

I have worked in the past in a system that used this technique
extensively to very good effect. Most common was where some more
complex convenience methods could be defined (and therefore
implemented by default) in terms of one or two core methods.

This default implementation was rarely the most efficient for a
particular class and so each class was free to provide its own more
efficient implementations of these complex methods.

Before you ask, it was an internal (i.e. not public) implementation of
a COM class/interface structure in the interpreted array language J.
Incidentally we also allowed resolution of name clashes on multiple
interfaces (as discussed ad nauseam elsewhere).

On Dec 4, 7:56=A0am, Daniel Dilts <dilts....@gmail.com> wrote:
> I have an interface with several methods in it. =A0One of the methods has=
 an implementation that would be useful in all but a few cases (types) with=
out requiring any member data. =A0Is there some way to declare a method suc=
h that it would be reused by structs that implement the interface, but it w=
ould have the option of being overridden.
