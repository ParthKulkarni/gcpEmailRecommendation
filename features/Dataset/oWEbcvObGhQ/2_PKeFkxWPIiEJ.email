X-BeenThere: golang-nuts@googlegroups.com
Received: by 10.101.214.12 with SMTP id r12ls2002320anq.0.p; Wed, 02 Dec 2009 
	08:18:44 -0800 (PST)
Received: by 10.101.33.17 with SMTP id l17mr328488anj.9.1259770722097;
        Wed, 02 Dec 2009 08:18:42 -0800 (PST)
Received: by 10.101.33.17 with SMTP id l17mr328487anj.9.1259770722071;
        Wed, 02 Dec 2009 08:18:42 -0800 (PST)
Return-Path: <emgh...@gmail.com>
Received: from mail-yx0-f144.google.com (mail-yx0-f144.google.com [209.85.210.144])
        by gmr-mx.google.com with ESMTP id 11si81025gxk.1.2009.12.02.08.18.42;
        Wed, 02 Dec 2009 08:18:42 -0800 (PST)
Received-SPF: pass (google.com: domain of emgh...@gmail.com designates 209.85.210.144 as permitted sender) client-ip=209.85.210.144;
Authentication-Results: gmr-mx.google.com; spf=pass (google.com: domain of emgh...@gmail.com designates 209.85.210.144 as permitted sender) smtp.mail=emgh...@gmail.com
Received: by mail-yx0-f144.google.com with SMTP id 8so442857yxe.19
        for <golan...@googlegroups.com>; Wed, 02 Dec 2009 08:18:42 -0800 (PST)
MIME-Version: 1.0
Received: by 10.100.18.21 with SMTP id 21mr22183anr.23.1259770721991; Wed, 02 
	Dec 2009 08:18:41 -0800 (PST)
Date: Wed, 2 Dec 2009 08:18:41 -0800 (PST)
In-Reply-To: <8f6bd5bd-c06c-40fa-9e99-d64f207ce6f5@c3g2000yqd.googlegroups.com>
X-IP: 95.84.72.151
References: <8f6bd5bd-c06c-40fa-9e99-d64f207ce6f5@c3g2000yqd.googlegroups.com>
User-Agent: G2/1.0
X-HTTP-UserAgent: Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US) 
	AppleWebKit/532.5 (KHTML, like Gecko) Chrome/4.0.249.11 Safari/532.5,gzip(gfe),gzip(gfe)
Message-ID: <0fce1dbd-0a97-411e-aeda-d7d2e6b829c0@r40g2000yqn.googlegroups.com>
Subject: Re: String concatenation evaluates Right to Left, not Left to Right.
From: emghazal <emgh...@gmail.com>
To: golang-nuts <golan...@googlegroups.com>
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable


On Dec 1, 8:47=A0pm, ray <r....@hollett.demon.co.uk> wrote:
> I was a little surprised to find that string concatenation (using the
> + operator) evaluates right-left, as the Go language spec says that
> all binary operators evaluate left-right. Have I missed some subtlety,
> or is this an undocumented language feature?
>
> I am using the 8g compiler on Ubuntu 9.10, and I am seeing this with
> s :=3D f() + f() + f(); where f() returns a string. I apologize if this
> is well known, as I have tried to search for it.

From the language spec: (http://golang.org/doc/
go_spec.html#Order_of_evaluation)
"When evaluating the elements of an assignment or expression, all
function calls, method calls and communication operations are
evaluated in lexical left-to-right order."

It looks like a bug to me.
