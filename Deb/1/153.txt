To : debian-devel@lists.debian.org
Subject : Re: Converting to dgit
From : Ghislain Vaillant <ghisvail@gmail.com>
Date : Fri, 06 Jan 2017 14:21:52 +0000
Message-id : 1483712512.28927.35.camel@gmail.com
In-reply-to : <[ðŸ”Ž]Â 2802351.gmIrWar0TM@kitterma-e6430>
References : <[ðŸ”Ž]Â 2802351.gmIrWar0TM@kitterma-e6430>


On Fri, 2017-01-06 at 00:41 -0500, Scott Kitterman wrote:
> On Friday, January 06, 2017 12:29:54 AM IOhannes m zmÃ¶lnig wrote:
> > On 01/04/2017 05:42 AM, Colin Watson wrote:
> > > git-dpm does too, and I agree it's nice.
> > 
> > here's an opposite data point:
> > 
> > being forced to use git-dpm by the python-modules-team policy - i
> > haven't had a single joyful experience with git-dpm.
> > so far, every import of a new upstream release turned into a nightmare
> > with an extra working clone of the repository, and skimming through the
> > same man- and webpages full of outdated documentation even though i'm
> > pretty sure that the required information was there the last time i looked.
> > 
> > git-dpm might be useful if you use it daily.
> > as it stands, i'm a very happy gbp user (without fancy addons) for
> > almost all of my packages, and the few python modules i maintain don't
> > do releases that often (which explains why i don't get a routine for
> > doing new upstream imports with git-dpm).
> 
> I don't use it often enough to remember all the details either.  I don't 
> recall the last time I had to do more than copy/paste a command from the man 
> page (OK, git-dpm tag I can remember).
Besides, git-dpm usually tells you what command to run next, like:
git-dpm import-new-upstream -> git-dpm rebase-patched -> git-dpm update-patches
It did not take me much time to adapt to the git-dpm workflow as a
result. I should say that I have been a happy git-dpm userÂ so far.
Ghis