To : debian-devel@lists.debian.org
Subject : Re: lintian: shlib-read-write-env
From : Ben Hutchings <ben@decadent.org.uk>
Date : Tue, 31 Jan 2017 15:49:40 +0000
Message-id : 1485877780.2900.21.camel@decadent.org.uk
In-reply-to : <[ðŸ”Ž]Â b942385e-47e5-5fc5-4372-a7edf478571a@iwakd.de>
References : 	<[ðŸ”Ž]Â CA+7wUsynDa8BAKsY-5g5cDqDHKujUZ0JhKBtsZRTPVvr4T6mgw@mail.gmail.com>	 <[ðŸ”Ž]Â b942385e-47e5-5fc5-4372-a7edf478571a@iwakd.de>


On Tue, 2017-01-31 at 14:23 +0100, Christian Seiler wrote:
> On 01/31/2017 11:15 AM, Mathieu Malaterre wrote:
> > I'd like to discuss addition of a new lintian checks for
> > getenv/setenv/putenv used in shared libraries.
> 
> Why getenv() though? It just reads the environment.
> > From what you link yourself:
> > The getenv and secure_getenv functions can be safely used in
> > multi-threaded programs.
[...]
But it returns a pointer to the value, which might be freed by another
thread before it is used.  If there were a reader function that copied
the value to a caller-provided buffer, it could be properly thread-
safe.
(The C library could also make getenv() thread-safe by maintaining a
per-thread cache of the environment and returning a pointer into that. 
But portable software still couldn't assume this.)
Ben.
-- 
Ben Hutchings
It is easier to write an incorrect program than to understand a correct
one.
signature.asc