To : Sean Whitton <spwhitton@spwhitton.name>
Subject : Re: Feedback on 3.0 source format problems
From : Ian Jackson <ijackson@chiark.greenend.org.uk>
Date : Mon, 9 Jan 2017 13:25:44 +0000
Message-id : 22643.36696.346187.123106@chiark.greenend.org.uk
In-reply-to : <[ðŸ”Ž]Â 20170109042737.waumiit3sjdqiglh@hephaestus.silentflame.com>
References : <[ðŸ”Ž]Â 87h95ght4g.fsf@hope.eyrie.org>	<[ðŸ”Ž]Â 87ful0q97e.fsf@thinkpad.rath.org>	<[ðŸ”Ž]Â 20170103201509.s3swo4w666qeieow@iris.silentflame.com>	<[ðŸ”Ž]Â 20170104021016.5xiymbf26uyymccl@jadzia.comodo.priv.at>	<[ðŸ”Ž]Â 87lgurh7oa.fsf@hope.eyrie.org>	<[ðŸ”Ž]Â 22636.58841.674428.944655@chiark.greenend.org.uk>	<[ðŸ”Ž]Â 20170105201448.6wudflmzuv25c7xz@iris.silentflame.com>	<[ðŸ”Ž]Â 22639.47074.971099.320107@chiark.greenend.org.uk>	<[ðŸ”Ž]Â 20170109042737.waumiit3sjdqiglh@hephaestus.silentflame.com>


Sean Whitton writes ("Re: Feedback on 3.0 source format problems"):
> I take it that only the maintainer is meant to look at the
> merging-baseline, and everyone else looks at the interchange view.
Anyone wanting to look at the patch stack can look at the interchange
view.  git blame, and git log, for example, will show:
  * For unchanged upstream files, the upstream history
  * For debian/ files (except patches), the Debian merging history
  * For changed upstream files, the upstream history followed
    by a commit representing the most recent version of each patch
>  My first worry is that pseudomerges are weird.  In fact, I've never
> seen them outside of weird Debian git workflows :) Someone might
> look at the interchange view, see all these pseudomerges, and have
> no idea how to interpret what the Debian maintainer is doing.  Do
> you have any thoughts on mitigating the potential confusion?
I think it might be useful to have an option to git-rev-list to
disregard non-contributing edges of pseudomerges.  That would mean you
could see the results in `gitk'.
> The advantage of thinking of the Debian packaging as just another branch
> of development is that the branching structure itself is easy to
> interpret for anyone who uses git.  "Ah, I see they merged my release
> tag into their branch, they must have been bringing Debian up-to-date
> with the latest release" -- this is very natural for git users.  We call
> it "packaging a new upstream release" but it's easier for an outsider to
> think of it as bringing a feature branch up-to-date with the latest
> mainline developments.
I can see why you might think this.  But this really does depend on
how big the delta is from upstream.  People who are used to doing
significant upstream development in projects managed in a
`traditional' way, rather than `just press the big "merge" button'
style, will want to see a patch stack.
Ian.
-- 
Ian Jackson <ijackson@chiark.greenend.org.uk>   These opinions are my own.
If I emailed you from an address @fyvzl.net or @evade.org.uk, that is
a private address which bypasses my fierce spamfilter.