To : debian-devel@lists.debian.org
Subject : Re: Feedback on 3.0 source format problems
From : Josh Triplett <josh@joshtriplett.org>
Date : Mon, 2 Jan 2017 01:45:44 -0800
Message-id : 20170102094541.uka57l4t543ibhok@x
In-reply-to : <[üîé]¬†m3k2adstvz.fsf@luffy.cx>


Vincent Bernat wrote:
> ‚ù¶  2 janvier 2017 00:57 -0800, Josh Triplett <josh@joshtriplett.org> :
>
> > I don't want the source format to care about details like those.  If
> > people want to use quilt to manage a patch series within their
> > packages,
> > they can do so, but the source format shouldn't care about that.  The
> > source format should not attempt to specify or interact in any way
> > with
> > patching or version control.
>
> For me, this is a great improvement over the previous format with
> several different patching systems (quilt, dpatch, nothing,
> custom). Now, most packages are using quilt, one less thing to
> understand.
>
> IMO, we still have too much diversity in how we handle version control
> for packages.
"Using" quilt by stuffing the former contents of .diff.gz into
debian/patches/debian-changes doesn't seem like an improvement; it just
adds complexity, and opens the possibility of someone adding other
changes via quilt, rather than as a patch suitable for direct "git am".
Personally, when I want to patch a random package, I run "debcheckout
package-name", make changes, commit them, format-patch, and mail that to
the BTS.  If the package doesn't have an appropriate Vcs field for
debcheckout to read, I instead run "apt source package-name",
"cp package-name-version{,.orig}", edit,
"diff -Naur package-name-version{.orig,}", and then submit the
result.  Either way, if someone wants to manage their patches in quilt
or similar, they can take the resulting patch and insert it into
debian/patches/ easily enough.