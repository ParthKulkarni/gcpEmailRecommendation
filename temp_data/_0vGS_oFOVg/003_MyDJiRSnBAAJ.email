X-Received: by 10.31.149.16 with SMTP id x16mr1135614vkd.12.1508947239509;
        Wed, 25 Oct 2017 09:00:39 -0700 (PDT)
X-BeenThere: golang-nuts@googlegroups.com
Received: by 10.176.76.65 with SMTP id d1ls1024339uag.4.gmail; Wed, 25 Oct
 2017 09:00:03 -0700 (PDT)
X-Received: by 10.31.189.202 with SMTP id n193mr216106vkf.5.1508947203389;
        Wed, 25 Oct 2017 09:00:03 -0700 (PDT)
Date: Wed, 25 Oct 2017 09:00:03 -0700 (PDT)
From: desaia...@gmail.com
To: golang-nuts <golan...@googlegroups.com>
Message-Id: <ec95b363-915d-48c4-83ea-0fa54615185c@googlegroups.com>
In-Reply-To: <20171025211046.769d7d92@gmail.com>
References: <a9fded25-07da-4cc7-be91-518f0f360ec8@googlegroups.com>
 <20171025211046.769d7d92@gmail.com>
Subject: Re: [go-nuts] Multiple Goroutine timeout
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_17832_1353215882.1508947203234"

------=_Part_17832_1353215882.1508947203234
Content-Type: multipart/alternative; 
	boundary="----=_Part_17833_1377306264.1508947203235"

------=_Part_17833_1377306264.1508947203235
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit

Thanks for the reply

How to gather all the values into CH and return to print

Thanks 

On Wednesday, October 25, 2017 at 7:41:34 PM UTC+5:30, M. Shulhan wrote:
>
> On Wed, 25 Oct 2017 06:30:09 -0700 (PDT) 
> desa...@gmail.com <javascript:> wrote: 
>
> > I am expecting to show url1 (2 sec ), url2 (4 sec ) but not url3( 6 
> > sec) where timeout is 5 sec 
> > 
> > but program showing only url1 value 
> > 
> > Please help 
> > 
> > https://play.golang.org/p/aMOoSEHjmZ 
> > 
> > Thanks in advance 
> > 
> > Rgds, 
> > 
> > Abhi 
> > 
> > 
> > package main 
> > 
> > import "fmt" 
> > import "time" 
> > 
> > func InvokeUrl1(u string, val chan<- string) { 
> >     time.Sleep(2 * time.Second) 
> >     val <- "Url1 Value" 
> > } 
> > func InvokeUrl2(u string, val chan<- string) { 
> >     time.Sleep(4 * time.Second) 
> >     val <- "Url2 Value" 
> > } 
> > func InvokeUrl3(u string, val chan<- string) { 
> >     time.Sleep(6 * time.Second) 
> >     val <- "Url3 Value" 
> > } 
> > 
> > func GetUrlValues(urls []string) { 
> > 
> >     ch := make(chan string, 1) 
> >     for _, url := range urls { 
> >         go func(u string) { 
> >             val := make(chan string) 
> >             if u == "url1" { 
> >               go InvokeUrl1(u, val) 
> >             } else if u == "url2" { 
> >               go InvokeUrl2(u, val) 
> >             } else if u == "url3" { 
> >               go InvokeUrl3(u, val) 
> >             } 
> > 
> >             select { 
> >             case ret := <-val: 
> >                 ch <- ret 
> >             case <-time.After(5 * time.Second): 
> >                 ch <- "nil" 
> >             } 
> >         }(url) 
> >     } 
> >     fmt.Println(<-ch) 
>
> You only print once, it suppose to be inside the loop or wrapped with 
> select while <-ch != "nil". 
>
> > } 
> > func main() { 
> >   GetUrlValues([]string{"url1", "url2", "url3"}) 
> > } 
> > 
>
>
>
> -- 
> { "name":"Mhd Sulhan", "phone":"+628567826625", "site":"kilabit.info" } 
>

------=_Part_17833_1377306264.1508947203235
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Thanks for the reply<div><br></div><div>How to gather all =
the values into CH and return to print</div><div><br></div><div>Thanks=C2=
=A0<br><br>On Wednesday, October 25, 2017 at 7:41:34 PM UTC+5:30, M. Shulha=
n wrote:<blockquote class=3D"gmail_quote" style=3D"margin: 0;margin-left: 0=
.8ex;border-left: 1px #ccc solid;padding-left: 1ex;">On Wed, 25 Oct 2017 06=
:30:09 -0700 (PDT)
<br><a href=3D"javascript:" target=3D"_blank" gdf-obfuscated-mailto=3D"0cIP=
wiChBAAJ" rel=3D"nofollow" onmousedown=3D"this.href=3D&#39;javascript:&#39;=
;return true;" onclick=3D"this.href=3D&#39;javascript:&#39;;return true;">d=
esa...@gmail.com</a> wrote:
<br>
<br>&gt; I am expecting to show url1 (2 sec ), url2 (4 sec ) but not url3( =
6
<br>&gt; sec) where timeout is 5 sec
<br>&gt;=20
<br>&gt; but program showing only url1 value
<br>&gt;=20
<br>&gt; Please help
<br>&gt;=20
<br>&gt; <a href=3D"https://play.golang.org/p/aMOoSEHjmZ" target=3D"_blank"=
 rel=3D"nofollow" onmousedown=3D"this.href=3D&#39;https://play.golang.org/p=
/aMOoSEHjmZ&#39;;return true;" onclick=3D"this.href=3D&#39;https://play.gol=
ang.org/p/aMOoSEHjmZ&#39;;return true;">https://play.golang.org/p/<wbr>aMOo=
SEHjmZ</a>
<br>&gt;=20
<br>&gt; Thanks in advance
<br>&gt;=20
<br>&gt; Rgds,
<br>&gt;=20
<br>&gt; Abhi
<br>&gt;=20
<br>&gt;=20
<br>&gt; package main
<br>&gt;=20
<br>&gt; import &quot;fmt&quot;
<br>&gt; import &quot;time&quot;
<br>&gt;=20
<br>&gt; func InvokeUrl1(u string, val chan&lt;- string) {
<br>&gt; =C2=A0 =C2=A0 time.Sleep(2 * time.Second)
<br>&gt; =C2=A0 =C2=A0 val &lt;- &quot;Url1 Value&quot;
<br>&gt; }
<br>&gt; func InvokeUrl2(u string, val chan&lt;- string) {
<br>&gt; =C2=A0 =C2=A0 time.Sleep(4 * time.Second)
<br>&gt; =C2=A0 =C2=A0 val &lt;- &quot;Url2 Value&quot;
<br>&gt; }
<br>&gt; func InvokeUrl3(u string, val chan&lt;- string) {
<br>&gt; =C2=A0 =C2=A0 time.Sleep(6 * time.Second)
<br>&gt; =C2=A0 =C2=A0 val &lt;- &quot;Url3 Value&quot;
<br>&gt; }
<br>&gt;=20
<br>&gt; func GetUrlValues(urls []string) {
<br>&gt;=20
<br>&gt; =C2=A0 =C2=A0 ch :=3D make(chan string, 1)
<br>&gt; =C2=A0 =C2=A0 for _, url :=3D range urls {
<br>&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 go func(u string) {
<br>&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 val :=3D make(chan strin=
g)
<br>&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 if u =3D=3D &quot;url1&q=
uot; {
<br>&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 go InvokeUrl1(u, =
val)
<br>&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 } else if u =3D=3D &quot=
;url2&quot; {
<br>&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 go InvokeUrl2(u, =
val)
<br>&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 } else if u =3D=3D &quot=
;url3&quot; {
<br>&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 go InvokeUrl3(u, =
val)
<br>&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 }
<br>&gt;=20
<br>&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 select {
<br>&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 case ret :=3D &lt;-val:
<br>&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 ch &lt;- r=
et
<br>&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 case &lt;-time.After(5 *=
 time.Second):
<br>&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 ch &lt;- &=
quot;nil&quot;
<br>&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 }
<br>&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 }(url)
<br>&gt; =C2=A0 =C2=A0 }
<br>&gt; =C2=A0 =C2=A0 fmt.Println(&lt;-ch)
<br>
<br>You only print once, it suppose to be inside the loop or wrapped with
<br>select while &lt;-ch !=3D &quot;nil&quot;.
<br>
<br>&gt; }
<br>&gt; func main() {
<br>&gt; =C2=A0 GetUrlValues([]string{&quot;url1&quot;, &quot;url2&quot;, &=
quot;url3&quot;})
<br>&gt; }
<br>&gt;=20
<br>
<br>
<br>
<br>--=20
<br>{ &quot;name&quot;:&quot;Mhd Sulhan&quot;, &quot;phone&quot;:&quot;+628=
567826625&quot;, &quot;site&quot;:&quot;<a href=3D"http://kilabit.info" tar=
get=3D"_blank" rel=3D"nofollow" onmousedown=3D"this.href=3D&#39;http://www.=
google.com/url?q\x3dhttp%3A%2F%2Fkilabit.info\x26sa\x3dD\x26sntz\x3d1\x26us=
g\x3dAFQjCNFGZSBr5W0HIDJiFrP7MCqn4uc2eQ&#39;;return true;" onclick=3D"this.=
href=3D&#39;http://www.google.com/url?q\x3dhttp%3A%2F%2Fkilabit.info\x26sa\=
x3dD\x26sntz\x3d1\x26usg\x3dAFQjCNFGZSBr5W0HIDJiFrP7MCqn4uc2eQ&#39;;return =
true;">kilabit.info</a>&quot; }
<br></blockquote></div></div>
------=_Part_17833_1377306264.1508947203235--

------=_Part_17832_1353215882.1508947203234--
