X-Received: by 10.67.8.100 with SMTP id dj4mr24337582pad.35.1424152137688;
        Mon, 16 Feb 2015 21:48:57 -0800 (PST)
X-BeenThere: golang-nuts@googlegroups.com
Received: by 10.50.44.4 with SMTP id a4ls1400194igm.36.canary; Mon, 16 Feb
 2015 21:48:42 -0800 (PST)
X-Received: by 10.50.253.1 with SMTP id zw1mr431399igc.11.1424152121985;
        Mon, 16 Feb 2015 21:48:41 -0800 (PST)
Date: Mon, 16 Feb 2015 21:48:40 -0800 (PST)
From: Kristopher Cost <lavos.det...@gmail.com>
To: golang-nuts@googlegroups.com
Message-Id: <ef4f3598-a82c-4acc-b2c7-416aef57ec3e@googlegroups.com>
Subject: GoLang on the Sony PlayStation Portable (PSP)
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_38_267031100.1424152120758"

------=_Part_38_267031100.1424152120758
Content-Type: multipart/alternative; 
	boundary="----=_Part_39_521116497.1424152120762"

------=_Part_39_521116497.1424152120762
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit



Out of curiousity and the desire to meld to of my favorite past-times, what 
would be involved with getting GoLang code compiled for the Sony 
PlayStation Portable (PSP)? 


The device is dual core:


PSP CPU Chip:

Sony CXD2962GG CPU

Based on MIPS R4000 32-bit Core

MIPS32R2 'Allegrex' core (little endian)


Media Engine Chip:

Sony CXD1876 CPU

Based on MIPS R4000 64-bit Core

MIPS32R2 core (little endian)


The base model has:

Main Memory 32MB (DDR SDRAM) (64MB on later models)

Flash Memory 32MB

Embedded DRAM 4MB


There exists an open-source C toolchain that supports all the custom 
instructions:


https://github.com/pspdev/pspsdk


I read up on getting MIPS cross compilation running:

https://github.com/golang/go/wiki/GccgoCrossCompilation


Would it be simular to that?


Any help with this odd mind exercise would be appreciated!

------=_Part_39_521116497.1424152120762
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: 7bit

<div dir="ltr"><p style="margin-bottom: 0px;">Out of curiousity and the desire to meld to of my favorite past-times, what would be involved with getting GoLang code compiled for the Sony PlayStation Portable (PSP)? </p>
<p style="margin-bottom: 0px;"><br></p>
<p style="margin-bottom: 0px;">The device is dual core:</p>
<p style="margin-bottom: 0px;"><br></p>
<p style="margin-bottom: 0px;">PSP CPU Chip:</p>
<p style="margin-bottom: 0px;">Sony CXD2962GG CPU</p>
<p style="margin-bottom: 0px;">Based on MIPS R4000 32-bit Core</p>
<p style="margin-bottom: 0px;">MIPS32R2 'Allegrex' core (little endian)</p>
<p style="margin-bottom: 0px;"><br></p>
<p style="margin-bottom: 0px;">Media Engine Chip:</p>
<p style="margin-bottom: 0px;">Sony CXD1876 CPU</p>
<p style="margin-bottom: 0px;">Based on MIPS R4000 64-bit Core</p>
<p style="margin-bottom: 0px;">MIPS32R2 core (little endian)</p>
<p style="margin-bottom: 0px;"><br></p>
<p style="margin-bottom: 0px;">The base model has:</p>
<p style="margin-bottom: 0px;">Main Memory 32MB (DDR SDRAM) (64MB on later models)</p>
<p style="margin-bottom: 0px;">Flash Memory 32MB</p>
<p style="margin-bottom: 0px;">Embedded DRAM 4MB</p>
<p style="margin-bottom: 0px;"><br></p>
<p style="margin-bottom: 0px;">There exists an open-source C toolchain that supports all the custom instructions:</p>
<p style="margin-bottom: 0px;"><br></p>
<p style="margin-bottom: 0px;">https://github.com/pspdev/pspsdk</p>
<p style="margin-bottom: 0px;"><br></p>
<p style="margin-bottom: 0px;">I read up on getting MIPS cross compilation running:</p>
<p style="margin-bottom: 0px;">https://github.com/golang/go/wiki/GccgoCrossCompilation</p>
<p style="margin-bottom: 0px;"><br></p>
<p style="margin-bottom: 0px;">Would it be simular to that?</p>
<p style="margin-bottom: 0px;"><br></p>
<p style="margin-bottom: 0px;">Any help with this odd mind exercise would be appreciated!</p></div>
------=_Part_39_521116497.1424152120762--

------=_Part_38_267031100.1424152120758--
