X-Received: by 10.236.168.101 with SMTP id j65mr1431587yhl.30.1405139333097;
        Fri, 11 Jul 2014 21:28:53 -0700 (PDT)
X-BeenThere: golang-nuts@googlegroups.com
Received: by 10.182.135.193 with SMTP id pu1ls509239obb.19.gmail; Fri, 11 Jul
 2014 21:28:27 -0700 (PDT)
X-Received: by 10.182.4.1 with SMTP id g1mr25542obg.3.1405139307113;
        Fri, 11 Jul 2014 21:28:27 -0700 (PDT)
Date: Fri, 11 Jul 2014 21:28:26 -0700 (PDT)
From: Big Jackson <bigjac...@gmail.com>
To: golang-nuts@googlegroups.com
Cc: Sh...@milochik.com
Message-Id: <9c71326d-98ab-4f58-b65b-966fc8c8a3a1@googlegroups.com>
In-Reply-To: <CAOzwKwHz-8mRLKrWB1YJGsJK04YQsEn2P1pAJfBfd_vJVcsRgA@mail.gmail.com>
References: <e3aa1401-f500-417a-a18c-3b341ed2da94@googlegroups.com>
 <CAOzwKwG=BOh84p1b9UkBrkGxvKetkCKDR_NEpXECh7iQEZGnCg@mail.gmail.com>
 <680b65b1-25e5-4bcb-a19f-25eb7e7a7b20@googlegroups.com>
 <CAOzwKwFVSuxNtLYZEbm=MLH_tYuKuoFVJEcR94HqCGcp7zPFmw@mail.gmail.com>
 <CAOzwKwHz-8mRLKrWB1YJGsJK04YQsEn2P1pAJfBfd_vJVcsRgA@mail.gmail.com>
Subject: Re: Re: [go-nuts] SQL database for cross-platform application
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_287_24219447.1405139306425"

------=_Part_287_24219447.1405139306425
Content-Type: multipart/alternative; 
	boundary="----=_Part_288_7446557.1405139306425"

------=_Part_288_7446557.1405139306425
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit

Well, that's good news! I am very new to cross-platform programming (having 
worked with exclusively Unix-based systems before now), so this is a relief.

I was going to go with Postgres simply because I want to learn it, but I am 
open to suggestions. I can give a general overview of how the program will 
work, and why I'm using a relational database to store the information.

The program will have an HTTP listener (possibly gorilla-mux) which will 
receive requests via HTTP protocol. Some requests will prompt the program 
to store things into the database and save them for later. 

Let's assume the API I'm working with is Twitter. I will constantly scan 
the Twitter API for messages with certain keywords and hashtags. When 
certain conditions are met, I fire a callback POST to the user's specified 
callback URL. The row can then be added to an archive table and deleted 
from the main table. I would like to keep archives for up to 1 year then 
delete them, and for customer service reasons I may need to look up data 
within the archive in case of an error in the system.

So, the reason for using a relational database is to use the indexing 
feature to quickly look up which keywords to look out for, then I should be 
able to also see which users need to be notified of any relevant messages 
(and what URL/method of callback they specified). I also have a HTTP 
request for users to look up things from the table that are relevant to 
them, such as how long it's been since the last message that meets their 
requirements has been tweeted. 

I guess it's a good time to ask if *all packages *compiled in golang will 
be cross-compatible because of static linking. Gorilla-mux seems to be the 
best HTTP listener, but I'll go with something else if it's not compatible 
with Windows, for example.

On Saturday, July 12, 2014 12:17:07 AM UTC-4, Shawn Milochik wrote:
>
> Oops, failed to send to the list.
> ---------- Forwarded message ----------
> From: "Shawn Milochik" <shaw...@gmail.com <javascript:>>
> Date: Jul 12, 2014 12:16 AM
> Subject: Re: [go-nuts] SQL database for cross-platform application
> To: "Big Jackson" <bigj...@gmail.com <javascript:>>
> Cc: 
>
> I probably should have been more clear. I think the first thing you need 
> to know is exactly which database you are targeting. Once you know that, 
> people can probably help with driver suggestions.
>
> I don't know of any reason why any driver, statically compiled into your 
> binary, would somehow behave differently or with different levels of 
> stability on different platforms.
>  

------=_Part_288_7446557.1405139306425
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Well, that's good news! I am very new to cross-platform pr=
ogramming (having worked with exclusively Unix-based systems before now), s=
o this is a relief.<div><br></div><div>I was going to go with Postgres simp=
ly because I want to learn it, but I am open to suggestions. I can give a g=
eneral overview of how the program will work, and why I'm using a relationa=
l database to store the information.</div><div><br></div><div>The program w=
ill have an HTTP listener (possibly gorilla-mux) which will receive request=
s via HTTP protocol. Some requests will prompt the program to store things =
into the database and save them for later.&nbsp;</div><div><br></div><div>L=
et's assume the API I'm working with is Twitter. I will constantly scan the=
 Twitter API for messages with certain keywords and hashtags. When certain =
conditions are met, I fire a callback POST to the user's specified callback=
 URL. The row can then be added to an archive table and deleted from the ma=
in table. I would like to keep archives for up to 1 year then delete them, =
and for customer service reasons I may need to look up data within the arch=
ive in case of an error in the system.</div><div><br></div><div>So, the rea=
son for using a relational database is to use the indexing feature to quick=
ly look up which keywords to look out for, then I should be able to also se=
e which users need to be notified of any relevant messages (and what URL/me=
thod of callback they specified). I also have a HTTP request for users to l=
ook up things from the table that are relevant to them, such as how long it=
's been since the last message that meets their requirements has been tweet=
ed.&nbsp;</div><div><br></div><div>I guess it's a good time to ask if <i>al=
l packages </i>compiled in golang will be cross-compatible because of stati=
c linking. Gorilla-mux seems to be the best HTTP listener, but I'll go with=
 something else if it's not compatible with Windows, for example.</div><div=
><br>On Saturday, July 12, 2014 12:17:07 AM UTC-4, Shawn Milochik wrote:<bl=
ockquote class=3D"gmail_quote" style=3D"margin: 0;margin-left: 0.8ex;border=
-left: 1px #ccc solid;padding-left: 1ex;"><p dir=3D"ltr">Oops, failed to se=
nd to the list.</p>
<div class=3D"gmail_quote">---------- Forwarded message ----------<br>From:=
 "Shawn Milochik" &lt;<a href=3D"javascript:" target=3D"_blank" gdf-obfusca=
ted-mailto=3D"ah4k898WfAsJ" onmousedown=3D"this.href=3D'javascript:';return=
 true;" onclick=3D"this.href=3D'javascript:';return true;">shaw...@gmail.co=
m</a>&gt;<br>Date: Jul 12, 2014 12:16 AM<br>Subject: Re: [go-nuts] SQL data=
base for cross-platform application<br>
To: "Big Jackson" &lt;<a href=3D"javascript:" target=3D"_blank" gdf-obfusca=
ted-mailto=3D"ah4k898WfAsJ" onmousedown=3D"this.href=3D'javascript:';return=
 true;" onclick=3D"this.href=3D'javascript:';return true;">bigj...@gmail.co=
m</a>&gt;<br>Cc: <br><br type=3D"attribution"><p dir=3D"ltr">I probably sho=
uld have been more clear. I think the first thing you need to know is exact=
ly which database you are targeting. Once you know that, people can probabl=
y help with driver suggestions.</p>

<p dir=3D"ltr">I don't know of any reason why any driver, statically compil=
ed into your binary, would somehow behave differently or with different lev=
els of stability on different platforms.</p>
</div>
</blockquote></div></div>
------=_Part_288_7446557.1405139306425--

------=_Part_287_24219447.1405139306425--
