X-Received: by 10.180.106.161 with SMTP id gv1mr831036wib.4.1362294384700;
        Sat, 02 Mar 2013 23:06:24 -0800 (PST)
X-BeenThere: golang-nuts@googlegroups.com
Received: by 10.180.24.37 with SMTP id r5ls228376wif.3.gmail; Sat, 02 Mar 2013
 23:06:17 -0800 (PST)
X-Received: by 10.204.146.77 with SMTP id g13mr631566bkv.5.1362294377519;
        Sat, 02 Mar 2013 23:06:17 -0800 (PST)
X-Received: by 10.204.146.77 with SMTP id g13mr631565bkv.5.1362294377500;
        Sat, 02 Mar 2013 23:06:17 -0800 (PST)
Return-Path: <dvy...@google.com>
Received: from mail-lb0-f182.google.com (mail-lb0-f182.google.com [209.85.217.182])
        by gmr-mx.google.com with ESMTPS id i9si1202140bki.2.2013.03.02.23.06.17
        (version=TLSv1 cipher=ECDHE-RSA-RC4-SHA bits=128/128);
        Sat, 02 Mar 2013 23:06:17 -0800 (PST)
Received-SPF: pass (google.com: domain of dvy...@google.com designates 209.85.217.182 as permitted sender) client-ip=209.85.217.182;
Authentication-Results: gmr-mx.google.com;
       spf=pass (google.com: domain of dvy...@google.com designates 209.85.217.182 as permitted sender) smtp.mail=dvy...@google.com;
       dkim=pass head...@google.com
Received: by mail-lb0-f182.google.com with SMTP id gg6so3231804lbb.13
        for <golan...@googlegroups.com>; Sat, 02 Mar 2013 23:06:17 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20120113;
        h=mime-version:x-received:in-reply-to:references:date:message-id
         :subject:from:to:cc:content-type;
        bh=Lv3yIIvLPK+hTC3TS8fGX+wTHw3cm6ywZ3PFmpE7Vws=;
        b=oIaOKz4X4NYWc7mJgo+abM/kVF5XkBYzRztYRel6+9Z7P00zzMTvAfG9Mjr56XeJZW
         7gYmpWijCLCElA4k1BqfrhoQA4HiWzz4PU6AGxi5xNzczj2u0nh3tDA/j7Z5ebfEhYZ5
         DY5kaeAoeOpytQVwKX9TXFyE9XSC7J5xX+y3U3dYpGFabhCKp6+GkkxfQXl+0EjYtEit
         lxfxMqkxMth3+1n1LbBq5ttBzPxp61K0FefwuocoMv9idDMPGhELe7cywvqbszhYjkvq
         UTQ/npssCfkz5qVwWBGYahKz90l1WhG1KFyL4kwWBXdbjrzb4GlV3TY5DB99S+w476Sr
         t48Q==
MIME-Version: 1.0
X-Received: by 10.152.125.239 with SMTP id mt15mr14048034lab.26.1362294377239;
 Sat, 02 Mar 2013 23:06:17 -0800 (PST)
Received: by 10.114.11.36 with HTTP; Sat, 2 Mar 2013 23:06:17 -0800 (PST)
In-Reply-To: <CAFgOgC8N+e5M8aPmt+vrvo90asKpA9P_G+YSnsF56Yq+AaWLuQ@mail.gmail.com>
References: <CAFgOgC9nkqCw9T3=owrYDfk6dNpBOkC0Z3K2r84upeCSCpaukw@mail.gmail.com>
	<CACT4Y+ZDKzCE7eyhFn=fWZpG0ZLdp_2tsr3XO_MZXMwXFPrYuQ@mail.gmail.com>
	<CAFgOgC-LCkzdiSZ-PSEid492-ME_7MSzV4oDH0kuM3AKikrKrg@mail.gmail.com>
	<CAFgOgC_6fP+NEZaArSbG_15vxizEubNMqoB41kaERF1QT3h4wg@mail.gmail.com>
	<CACT4Y+ZUEqTp2yuH4nG-2s36xm0qeCRDK6B3ExWyvYt5zoVH9A@mail.gmail.com>
	<CAFgOgC8N+e5M8aPmt+vrvo90asKpA9P_G+YSnsF56Yq+AaWLuQ@mail.gmail.com>
Date: Sun, 3 Mar 2013 09:06:17 +0200
Message-ID: <CACT4Y+bO2q3UQ1yNU2og0Bj=LTNxU1_Z4KDFogAGdG-Ct0p1mw@mail.gmail.com>
Subject: Re: [go-nuts] Workload semantics of new scheduler queues
From: Dmitry Vyukov <dvy...@google.com>
To: "Devon H. O'Dell" <devon...@gmail.com>
Cc: golang-nuts <golan...@googlegroups.com>
Content-Type: text/plain; charset=ISO-8859-1
X-Gm-Message-State: ALoCoQmaRFKwyy3MBUfc23zqyQrh+ms51Deen6383Vuth2nURtZMWuj0ZsCeUaxpAzdp/5s/hLAw1o4LTglmNR+Q9sPDAQjuhAMeUVnP8S7FRN7cOoE4gD0Bvfi1JfLql5Vj0jWzlptYyJOygz452Vy2XORd39ovqVM5QpexND4Rjm6hdiVl90kdcjdwPM7r0I7P4QowXj1BWhneTNWoNjVzC26sHs+Zlg==

On Sun, Mar 3, 2013 at 8:56 AM, Devon H. O'Dell <devon...@gmail.com> wrote:
> 2013/3/3 Dmitry Vyukov <dvy...@google.com>:
>> On Sun, Mar 3, 2013 at 8:51 AM, Devon H. O'Dell <devon...@gmail.com> wrote:
>>> Forgot to CC list
>>>
>>>
>>> ---------- Forwarded message ----------
>>> From: Devon H. O'Dell <devon...@gmail.com>
>>> Date: 2013/3/3
>>> Subject: Re: [go-nuts] Workload semantics of new scheduler queues
>>> To: Dmitry Vyukov <dvy...@google.com>
>>>
>>>
>>> More in a bit, but...
>>>
>>>>> Since Pn can steal work from Pm, the semantics of access require
>>>>> assuming multiple consumers. But I can't tell if I'm right about
>>>>> understanding the producer workload. If I'm wrong, it needs to be
>>>>> MPMC, which reduces the producer side wait-freedom guarantee to simply
>>>>> lock-free, but I guess that's fine. For now I just want to see how it
>>>>> compares, especially on highly contended workloads. Getting this
>>>>> working on ARM will require adding the DMB instruction (possibly DSB,
>>>>> too) to the assembler.
>>>>
>>>> There are some portable atomic operations available in runtime, see
>>>> runtime.atomicload/store/xchg/cas/xadd.
>>>
>>> I'm worried about this. ARM has relaxed memory ordering, and the
>>> compilers don't generate memory fences on ARM, which means that
>>> lock-free data structures will probably break in weird ways if they're
>>> implemented on ARM. If these are working, it might be by accident...
>>> :S
>>
>>
>> Current atomic operations provide sequential consistency, that is,
>> they include all possible memory barriers.
>
> I haven't looked at the generated ASM output, but really? I don't see
> DSB/DMB support in 5a. But I haven't looked in compiled binaries for
> ARM yet. Just want to make sure, because "just using an atomic" isn't
> enough for ARM since it can reorder loads and stores with each other,
> irrespective of whether or not they deal with the same address.

It's a good question. Now that I am actually looking at the code, I
think the arm atomics indeed lack proper memory barriers. And it can
be the reason why my scheduler patch initially deadlocked on arm, and
why adding atomicload/store instead of plain loads and stored fixed it
(atomicload/store implemented as ldrex/strex loop).
