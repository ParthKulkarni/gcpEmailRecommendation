X-Received: by 10.182.216.3 with SMTP id om3mr3656397obc.39.1362293808112;
        Sat, 02 Mar 2013 22:56:48 -0800 (PST)
X-BeenThere: golang-nuts@googlegroups.com
Received: by 10.182.17.65 with SMTP id m1ls983938obd.52.gmail; Sat, 02 Mar
 2013 22:56:41 -0800 (PST)
X-Received: by 10.42.87.198 with SMTP id z6mr12682673icl.27.1362293801249;
        Sat, 02 Mar 2013 22:56:41 -0800 (PST)
X-Received: by 10.42.87.198 with SMTP id z6mr12682671icl.27.1362293801231;
        Sat, 02 Mar 2013 22:56:41 -0800 (PST)
Return-Path: <devon...@gmail.com>
Received: from mail-ob0-x22b.google.com (mail-ob0-x22b.google.com [2607:f8b0:4003:c01::22b])
        by gmr-mx.google.com with ESMTPS id j17si476228iga.2.2013.03.02.22.56.41
        (version=TLSv1 cipher=ECDHE-RSA-RC4-SHA bits=128/128);
        Sat, 02 Mar 2013 22:56:41 -0800 (PST)
Received-SPF: pass (google.com: domain of devon...@gmail.com designates 2607:f8b0:4003:c01::22b as permitted sender) client-ip=2607:f8b0:4003:c01::22b;
Authentication-Results: gmr-mx.google.com;
       spf=pass (google.com: domain of devon...@gmail.com designates 2607:f8b0:4003:c01::22b as permitted sender) smtp.mail=devon...@gmail.com;
       dkim=pass head...@gmail.com
Received: by mail-ob0-f171.google.com with SMTP id x4so1347105obh.16
        for <golan...@googlegroups.com>; Sat, 02 Mar 2013 22:56:41 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:x-received:in-reply-to:references:date:message-id
         :subject:from:to:cc:content-type;
        bh=eTjj1AjDCyF2sxWdN4VvxGvGxIxYsEw/pJRLfo4bVEg=;
        b=OIr5UpsjfU2HaD3GwGUbM7Uc+JNt25mseqqP4CClLpYiL706ahh/iImKYoY2QcCP+K
         zr8NmDsY1c+AIyZk9XxNsogMxJHUJszG60MfyIVVSGq8saTQTN8pZAdsY3CvdIa9uV1H
         KYzdrwWUGQnp33nlpJTx25RvQHmnWriaMb/ybiaioSxg/JESnCQuVMr66H6ZwkTxy9hx
         mFpv76k1Wmm91ngTRIe7CVIXMPRh1ZqzOEBt1bNXu+uGU7qJyMyJPdhYiX7+TegQdH98
         mnUzDaX7TuuVka+aOGE4O7PFKajlQZY3S9c/eGG+KqkX6i80KsyqXeQ0jSPC7IhFxixx
         XT8w==
MIME-Version: 1.0
X-Received: by 10.60.19.101 with SMTP id d5mr12308717oee.115.1362293800941;
 Sat, 02 Mar 2013 22:56:40 -0800 (PST)
Received: by 10.60.103.73 with HTTP; Sat, 2 Mar 2013 22:56:40 -0800 (PST)
In-Reply-To: <CACT4Y+ZUEqTp2yuH4nG-2s36xm0qeCRDK6B3ExWyvYt5zoVH9A@mail.gmail.com>
References: <CAFgOgC9nkqCw9T3=owrYDfk6dNpBOkC0Z3K2r84upeCSCpaukw@mail.gmail.com>
	<CACT4Y+ZDKzCE7eyhFn=fWZpG0ZLdp_2tsr3XO_MZXMwXFPrYuQ@mail.gmail.com>
	<CAFgOgC-LCkzdiSZ-PSEid492-ME_7MSzV4oDH0kuM3AKikrKrg@mail.gmail.com>
	<CAFgOgC_6fP+NEZaArSbG_15vxizEubNMqoB41kaERF1QT3h4wg@mail.gmail.com>
	<CACT4Y+ZUEqTp2yuH4nG-2s36xm0qeCRDK6B3ExWyvYt5zoVH9A@mail.gmail.com>
Date: Sun, 3 Mar 2013 01:56:40 -0500
Message-ID: <CAFgOgC8N+e5M8aPmt+vrvo90asKpA9P_G+YSnsF56Yq+AaWLuQ@mail.gmail.com>
Subject: Re: [go-nuts] Workload semantics of new scheduler queues
From: "Devon H. O'Dell" <devon...@gmail.com>
To: Dmitry Vyukov <dvy...@google.com>
Cc: golang-nuts <golan...@googlegroups.com>
Content-Type: text/plain; charset=UTF-8

2013/3/3 Dmitry Vyukov <dvy...@google.com>:
> On Sun, Mar 3, 2013 at 8:51 AM, Devon H. O'Dell <devon...@gmail.com> wrote:
>> Forgot to CC list
>>
>>
>> ---------- Forwarded message ----------
>> From: Devon H. O'Dell <devon...@gmail.com>
>> Date: 2013/3/3
>> Subject: Re: [go-nuts] Workload semantics of new scheduler queues
>> To: Dmitry Vyukov <dvy...@google.com>
>>
>>
>> More in a bit, but...
>>
>>>> Since Pn can steal work from Pm, the semantics of access require
>>>> assuming multiple consumers. But I can't tell if I'm right about
>>>> understanding the producer workload. If I'm wrong, it needs to be
>>>> MPMC, which reduces the producer side wait-freedom guarantee to simply
>>>> lock-free, but I guess that's fine. For now I just want to see how it
>>>> compares, especially on highly contended workloads. Getting this
>>>> working on ARM will require adding the DMB instruction (possibly DSB,
>>>> too) to the assembler.
>>>
>>> There are some portable atomic operations available in runtime, see
>>> runtime.atomicload/store/xchg/cas/xadd.
>>
>> I'm worried about this. ARM has relaxed memory ordering, and the
>> compilers don't generate memory fences on ARM, which means that
>> lock-free data structures will probably break in weird ways if they're
>> implemented on ARM. If these are working, it might be by accident...
>> :S
>
>
> Current atomic operations provide sequential consistency, that is,
> they include all possible memory barriers.

I haven't looked at the generated ASM output, but really? I don't see
DSB/DMB support in 5a. But I haven't looked in compiled binaries for
ARM yet. Just want to make sure, because "just using an atomic" isn't
enough for ARM since it can reorder loads and stores with each other,
irrespective of whether or not they deal with the same address.

--dho
