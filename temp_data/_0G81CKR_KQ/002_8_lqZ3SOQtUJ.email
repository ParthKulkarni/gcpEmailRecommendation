X-Received: by 10.236.39.174 with SMTP id d34mr42205694yhb.54.1416305599330;
        Tue, 18 Nov 2014 02:13:19 -0800 (PST)
X-BeenThere: golang-nuts@googlegroups.com
Received: by 10.50.13.7 with SMTP id d7ls1576402igc.7.canary; Tue, 18 Nov 2014
 02:13:05 -0800 (PST)
X-Received: by 10.50.93.103 with SMTP id ct7mr366846igb.11.1416305585554;
        Tue, 18 Nov 2014 02:13:05 -0800 (PST)
Date: Tue, 18 Nov 2014 02:13:04 -0800 (PST)
From: Jon Seymour <jon.s...@gmail.com>
To: golang-nuts@googlegroups.com
Message-Id: <29801fa8-747d-4e23-9c95-6822d5c689ec@googlegroups.com>
In-Reply-To: <5cea4253-5973-4456-9018-03c1e423634b@googlegroups.com>
References: <5cea4253-5973-4456-9018-03c1e423634b@googlegroups.com>
Subject: Re: Problems calling Windows DLL entry points that  are exported
 with __stdcall linkage.
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_3170_814967696.1416305584370"

------=_Part_3170_814967696.1416305584370
Content-Type: multipart/alternative; 
	boundary="----=_Part_3171_511366106.1416305584370"

------=_Part_3171_511366106.1416305584370
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit

Sure, I'll create a test case and post a link to it when I am done.

jon.

On Monday, 17 November 2014 14:50:03 UTC+11, Jon Seymour wrote:
>
> G'day,
>
> I've been trying to call out from a CGO go module to a Windows DLL 
> produced by MVSC that has __stdcall linkage.
>
> If I do nothing, the 8l link fails with errors like this:
>
> "C:\\Go\\pkg\\tool\\windows_386\\8l.exe" -o 
> "C:\\Users\\Jon\\AppData\\Local\\Temp\\go-build290355999\\github.com
> \\ninjasphere\\spher
> e-factory-test\\sajet-cmd\\_obj\\exe\\a.out.exe" -L 
> "C:\\Users\\Jon\\AppData\\Local\\Temp\\go-build290355999" -L 
> "c:\\Users\\jon\\Go
> \\pkg\\windows_386" -extld=gcc 
> "C:\\Users\\Jon\\AppData\\Local\\Temp\\go-build290355999\\github.com
> \\ninjasphere\\sphere-factory-tes
> t\\sajet-cmd.a"
> # github.com/ninjasphere/sphere-factory-test/sajet-cmd
> main(.text): undefined: SajetTransClose
> main(.text): undefined: SajetTransData
> main(.text): undefined: SajetTransStart
>
> If I follow the advice http://www.mingw.org/wiki/msvc_and_mingw_dlls in 
> here and massage the .def file to remove the leading underscores, e.g.
>
> sed -i "s/^_//" SajetStub.def 
> dlltool -U -d SajetStub.def -l libsajetstub.a
>
> then the 8l link succeeds, but at runtime I get a "procedure entry point 
> SajetTransClose@0" could not be located.
>
> If I change the DLL to use __cdecl linkage instead, then I don't need to 
> massage the import library and everything works as expected.
>
> Which is fine, except I am ultimately trying to call a DLL provided by a 
> 3rd party which does have __stdcall linkage so the option of using __cdecl 
> linkage isn't available to me.
>
> Am I missing something about calling Windows DLLs with __stdcall linkage?
>
> jon.
>
>
------=_Part_3171_511366106.1416305584370
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Sure, I'll create a test case and post a link to it when I=
 am done.<div><br></div><div>jon.<br><br>On Monday, 17 November 2014 14:50:=
03 UTC+11, Jon Seymour  wrote:<blockquote class=3D"gmail_quote" style=3D"ma=
rgin: 0;margin-left: 0.8ex;border-left: 1px #ccc solid;padding-left: 1ex;">=
<div dir=3D"ltr">G'day,<div><br></div><div>I've been trying to call out fro=
m a CGO go module to a Windows DLL produced by MVSC that has __stdcall link=
age.<br><br>If I do nothing, the 8l link fails with errors like this:<br><b=
r><div>"C:\\Go\\pkg\\tool\\windows_<wbr>386\\8l.exe" -o "C:\\Users\\Jon\\Ap=
pData\\<wbr>Local\\Temp\\go-<wbr>build290355999\\<a href=3D"http://github.c=
om" target=3D"_blank" onmousedown=3D"this.href=3D'http://www.google.com/url=
?q\75http%3A%2F%2Fgithub.com\46sa\75D\46sntz\0751\46usg\75AFQjCNFCNLSjW9vNI=
lZmNtEh3Pi8fjEOSw';return true;" onclick=3D"this.href=3D'http://www.google.=
com/url?q\75http%3A%2F%2Fgithub.com\46sa\75D\46sntz\0751\46usg\75AFQjCNFCNL=
SjW9vNIlZmNtEh3Pi8fjEOSw';return true;">github.com</a>\\<wbr>ninjasphere\\s=
pher</div><div>e-factory-test\\sajet-cmd\\_<wbr>obj\\exe\\a.out.exe" -L "C:=
\\Users\\Jon\\AppData\\<wbr>Local\\Temp\\go-<wbr>build290355999" -L "c:\\Us=
ers\\jon\\Go</div><div>\\pkg\\windows_386" -extld=3Dgcc "C:\\Users\\Jon\\Ap=
pData\\<wbr>Local\\Temp\\go-<wbr>build290355999\\<a href=3D"http://github.c=
om" target=3D"_blank" onmousedown=3D"this.href=3D'http://www.google.com/url=
?q\75http%3A%2F%2Fgithub.com\46sa\75D\46sntz\0751\46usg\75AFQjCNFCNLSjW9vNI=
lZmNtEh3Pi8fjEOSw';return true;" onclick=3D"this.href=3D'http://www.google.=
com/url?q\75http%3A%2F%2Fgithub.com\46sa\75D\46sntz\0751\46usg\75AFQjCNFCNL=
SjW9vNIlZmNtEh3Pi8fjEOSw';return true;">github.com</a>\\<wbr>ninjasphere\\s=
phere-factory-<wbr>tes</div><div>t\\sajet-cmd.a"</div><div># <a href=3D"htt=
p://github.com/ninjasphere/sphere-factory-test/sajet-cmd" target=3D"_blank"=
 onmousedown=3D"this.href=3D'http://www.google.com/url?q\75http%3A%2F%2Fgit=
hub.com%2Fninjasphere%2Fsphere-factory-test%2Fsajet-cmd\46sa\75D\46sntz\075=
1\46usg\75AFQjCNFA-DVLTpNzO-7KlfAhc7WKQII2hA';return true;" onclick=3D"this=
.href=3D'http://www.google.com/url?q\75http%3A%2F%2Fgithub.com%2Fninjaspher=
e%2Fsphere-factory-test%2Fsajet-cmd\46sa\75D\46sntz\0751\46usg\75AFQjCNFA-D=
VLTpNzO-7KlfAhc7WKQII2hA';return true;">github.com/ninjasphere/sphere-<wbr>=
factory-test/sajet-cmd</a></div><div>main(.text): undefined: SajetTransClos=
e</div><div>main(.text): undefined: SajetTransData</div><div>main(.text): u=
ndefined: SajetTransStart</div></div><div><br>If I follow the advice&nbsp;<=
a href=3D"http://www.mingw.org/wiki/msvc_and_mingw_dlls" target=3D"_blank" =
onmousedown=3D"this.href=3D'http://www.google.com/url?q\75http%3A%2F%2Fwww.=
mingw.org%2Fwiki%2Fmsvc_and_mingw_dlls\46sa\75D\46sntz\0751\46usg\75AFQjCNH=
FFvyX9b6VhyHLWjAJ5BwQKE0Mxw';return true;" onclick=3D"this.href=3D'http://w=
ww.google.com/url?q\75http%3A%2F%2Fwww.mingw.org%2Fwiki%2Fmsvc_and_mingw_dl=
ls\46sa\75D\46sntz\0751\46usg\75AFQjCNHFFvyX9b6VhyHLWjAJ5BwQKE0Mxw';return =
true;">http://www.mingw.org/<wbr>wiki/msvc_and_mingw_dlls</a> in here and m=
assage the .def file to remove the leading underscores, e.g.<br><br>sed -i =
"s/^_//" SajetStub.def&nbsp;</div><div>dlltool -U -d SajetStub.def -l libsa=
jetstub.a</div><div><br>then the 8l link succeeds, but at runtime I get a "=
procedure entry point SajetTransClose@0" could not be located.<br><br>If I =
change the DLL to use __cdecl linkage instead, then I don't need to massage=
 the import library and everything works as expected.<br><br>Which is fine,=
 except I am ultimately trying to call a DLL provided by a 3rd party which =
does have __stdcall linkage so the option of using __cdecl linkage isn't av=
ailable to me.<br><br>Am I missing something about calling Windows DLLs wit=
h __stdcall linkage?<br><br>jon.<br><br></div></div></blockquote></div></di=
v>
------=_Part_3171_511366106.1416305584370--

------=_Part_3170_814967696.1416305584370--
