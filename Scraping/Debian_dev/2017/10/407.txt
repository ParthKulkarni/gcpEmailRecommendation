To : debian-devel@lists.debian.org, debian-cross@lists.debian.org
Subject : Re: getconf(1) interface considered cross-harmful
From : Guillem Jover <guillem@debian.org>
Date : Mon, 30 Oct 2017 09:59:37 +0100
Message-id : 20171030085937.gf7f5qf3i5mys4ck@gaara.hadrons.org
Mail-followup-to : debian-devel@lists.debian.org,	debian-cross@lists.debian.org
In-reply-to : <[ðŸ”Ž]Â 20171019095130.tpcfzbfls2lluchf@perpetual.pseudorandom.co.uk>
References : <[ðŸ”Ž]Â 20171019085036.j6iw7avqaob2qtur@thunder.hadrons.org> <[ðŸ”Ž]Â 20171019095130.tpcfzbfls2lluchf@perpetual.pseudorandom.co.uk>


On Thu, 2017-10-19 at 10:51:30 +0100, Simon McVittie wrote:
> On Thu, 19 Oct 2017 at 10:50:36 +0200, Guillem Jover wrote:
> > When it comes to LFS, starting with dpkg 1.19.0 you can now use the
> > new Â«lfsÂ» feature from the Â«futureÂ» feature area
> 
> ... or if your upstream uses Autotools, ask them to add AC_SYS_LARGEFILE
> to configure.ac, which as far as I can tell does the right thing.
Sure, and that was already covered in the lintian tag as one of the
possible solutions. My assumption for adding that new build flag
feature has been that if maintainers are currently using getconf(1)
it is because either the package does not use autoconf, or they might
be uncomfortable patching it or similar. And this would give an easy
migration path.
I filed #879935, and the lintian tag clarification got applied, the
remaining part is for emitting a tag on wrong getconf(1) usage.
Thanks,
Guillem