To : debian-devel@lists.debian.org
Subject : Re: OpenSSL disables TLS 1.0 and 1.1
From : Daniel Reichelt <debian@nachtgeist.net>
Date : Sat, 12 Aug 2017 16:07:12 +0200
Message-id : ae9acecc-b032-fb98-e92c-6d2e79deeea2@nachtgeist.net
In-reply-to : <[ðŸ”Ž]Â 8760dtt206.fsf@err.no>
References : <20170807014238.mf64rdvgpdkpaiwa@roeckx.be> <[ðŸ”Ž]Â 8737932yic.fsf@delenn.ganneff.de> <[ðŸ”Ž]Â 20170807185241.qqamsdbf5pyb3pch@bongo.bofh.it> <[ðŸ”Ž]Â 0dni8fh2k7j5v8@mids.svenhartge.de> <[ðŸ”Ž]Â 20170811112052.a4vkn3skwcoif5p7@bongo.bofh.it> <[ðŸ”Ž]Â 20170811125256.tmi265wt424hb6te@bongo.bofh.it> <[ðŸ”Ž]Â 871soh24m7.fsf@hope.eyrie.org> <[ðŸ”Ž]Â 8760dtt206.fsf@err.no>


On 08/12/2017 02:16 PM, Tollef Fog Heen wrote:
> While I think we might want to ship buster with TLS 1.0 available, I
> think running with it disabled for parts of the development cycle is
> very useful, since it exposes bugs we have in packages that will use
> that version out of the box (isync being referred to elsethread).
> Finding and fixing those bugs is good.
> 
This got me thinking... how about a split of the generated binary
packages to generate a (default) set with only TLS 1.2 available and a
fallback set with the current configuration?
One would have to work out a convention for whether
1) the fallback set would have both Provides and Conflicts set or
2)  both sets should cooperate with each other and how
2.1) via alternatives
2.2) a more fine-grained approach to select an appropriately configured
library on a per-application basis (e.g. LD_PRELOAD?)
Cheers
Daniel
signature.asc