To : debian-devel@lists.debian.org
Subject : references to software catalogs
From : Steffen Möller <steffen_moeller@gmx.de>
Date : Thu, 21 Sep 2017 12:56:44 +0200
Message-id : 0a68b31d-1849-8137-060a-19db307a9f95@gmx.de


Hello,
Because of ever-more complicated workflows in computational biology,
researchers combine more and more tools within a project and people
start getting confused over what (flavour of) tool has been involved in
an analysis when exchanging worklows or when skimming through notes of
an analysis done a few years back. To help this situation, the old
concept of software catalogs and assigning IDs to software has gained
some new attention.
We have come up with an extension to the debian/upstream/metadata file like
Registry:
 - Name: NameOfCatalog
   Entry: SoftwareIdentifier
and at the moment support SciCrunch RRIDs, OMICtools and bio.tools.
These IDs are earmarked to eventually appear on the Debian Med task
pages and point to the external source, which in part already point to
Debian (like OMICtools) and add additional information helping our users
like informing on similar tools or about tools co-cited in scientific
publications. This is meant to help our users to craft better workflows
more quickly. And it helps our visibility, too.
Also for less scientific software it may be of interest, e.g. for our
package trackers, to point to catalogs. I just now found
https://en.wikipedia.org/wiki/Open_Hub and find to like it. There may be
others. What does our community think? There is
https://www.openhub.net/p/inkscape and one could add
Registry:
 - Name: Open Hub
   Entry: inkscape
to debian/upstream/metadata to give whoever is interested the
opportunity to add a pointer to or from that catalog when talking about
that software. I would not place the full URL since those paths are not
unlikely to change over time.
The immediate concern is obviously yet another overhead that we impose
on our developers. But once we have everything in the successor of
alioth, I see this to be a very inviting first contribution by our next
generation of developers or just some motivated users of ours. So, the
overhead should not be too bad for us.
Please discuss.
Many thanks
Steffen