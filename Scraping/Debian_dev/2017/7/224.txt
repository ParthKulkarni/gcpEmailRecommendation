To : debian-devel@lists.debian.org
Subject : Re: Naming of network devices - how to improve it in buster
From : Russell Stuart <russell-debian@stuart.id.au>
Date : Sat, 15 Jul 2017 22:44:46 +1000
Message-id : 1500122686.11338.1.camel@stuart.id.au
Reply-to : russell-debian@stuart.id.au
In-reply-to : <[ðŸ”Ž]Â 87fudymeuu.fsf@err.no>
References : <[ðŸ”Ž]Â 5962B743.8030702@landfreak.com>	 <[ðŸ”Ž]Â 20170710134714.33b4rbp4gqo4xj5r@sliepen.org>	 <[ðŸ”Ž]Â 20170710162228.v4teqev5vx3xxgj5@angband.pl> <[ðŸ”Ž]Â 12214332.2fR4hsN12g@merkaba>	 <[ðŸ”Ž]Â 658546a9-4ecf-18d0-4fb2-1e8d1a9c2dcc@debian.org>	 <[ðŸ”Ž]Â 20170711101459.uglna6qjj7jd5zq7@sliepen.org>	 <[ðŸ”Ž]Â 896774a5-3f5f-fa91-1a50-da892bcd0236@debian.org>	 <[ðŸ”Ž]Â E1dVJfL-0007Up-5d@swivel.zugschlus.de>	 <[ðŸ”Ž]Â 1499919749.18941.11.camel@stuart.id.au>	 <[ðŸ”Ž]Â CAOdo=SzTAwVdy_7Lf8Kg6ciE8BP3=yU0zr5XViZTOwoaUMhNbQ@mail.gmail.com>	 <[ðŸ”Ž]Â 1499940874.4694.1.camel@stuart.id.au>	 <[ðŸ”Ž]Â CALGYmupKouTAcfbYzL5-PW6HfG-t1OwU4wMmjbpi0+5XsLmCHQ@mail.gmail.com>	 <[ðŸ”Ž]Â 1499948254.4694.6.camel@stuart.id.au> <[ðŸ”Ž]Â 871spkqq0t.fsf@hope.eyrie.org>	 <[ðŸ”Ž]Â 5c003368-12f1-2c24-68d6-ec3794e508a8@philkern.de>	 <[ðŸ”Ž]Â 87h8ygoy4t.fsf@hope.eyrie.org> <[ðŸ”Ž]Â 871spj5qe1.fsf@luffy.cx>	 <[ðŸ”Ž]Â 87zic70zhu.fsf@hope.eyrie.org> <[ðŸ”Ž]Â 1500076864.4300.6.camel@stuart.id.au>	 <[ðŸ”Ž]Â 87fudymeuu.fsf@err.no>


On Sat, 2017-07-15 at 07:46 +0200, Tollef Fog Heen wrote:
> Doesn't something like:
> 
> [Unit]
> Description=My hook for foo.link
> After=foo.link
> BindsTo=foo.link
> 
> [Service]
> Type=oneshot
> ExecStart=/usr/local/sbin/whatever
> RemainAfterExit=yes
> 
> [Install]
> WantedBy=multi-user.target
> 
> work to hook into when a link unit is activated?
> 
> (Or just a Wants and Before in the foo.link unit)
When I discovered .link and .network files the first thing I looked up
in the doco was whether that sort of thing was possible.  I decided it
wasn't and wrote it off as useless for me.
Now you've made me check for real.  After setting up the unit files you
suggested I get this message in journalctl:
  Failed to add dependency on foo.link, ignoring: Invalid argument
So now I'm fairly convinced the above isn't a thing.  systemd unit
files and udev unit files live in two different worlds - they can't
refer to each other.
That aside, it wouldn't work for my most advance use case anyway.  My
issue is I have boxes literally 1000's of km's away.  Occasionally it
all goes wrong, the only way to fix it is ssh in but "all" includes the
internet connection.
My fix was to detect when a mobile phone was plugged in via USB, then
create a vpn connection home. This is all doable with a few lines in
/etc/network/interfaces - the hard bit is detecting when some random
USB device is a mobile phone.  Standard udev rules can't do it, and so
systemd.link being less powerful doesn't have a hope.  This isn't a
reflection on either of them really - it's a very specialised use case.
  However, I do expect them to provide an escape route.  Udev does - it
can run a program to decide.  systemd.link can't.signature.asc