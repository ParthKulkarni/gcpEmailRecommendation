To : Steve Langasek <vorlon@debian.org>, debian-arm@lists.debian.org, debian-devel@lists.debian.org
Subject : Re: Bug#881333: Qt with GLES on arm64 maintainer's decision - Was:: Upcoming Qt switch to OpenGL ES on arm64
From : "Keith Packard" <keithp@keithp.com>
Date : Mon, 26 Nov 2018 15:39:03 -0800
Message-id : 871s77s92g.fsf@keithp.com
In-reply-to : <[ðŸ”Ž]Â 20181126232102.GA26495@virgil.dodds.net>
References : <[ðŸ”Ž]Â 20181122183729.GA13435@mitya57.me> <151031873170.10841.8804101691345166919.reportbug@solembum> <[ðŸ”Ž]Â 20181126113757.GD21264@home.ouaza.com> <[ðŸ”Ž]Â 2119184.y1Z6FZQGf0@tonks> <[ðŸ”Ž]Â CAOh3dDbxqGiPm+MziUGHodExBTCfZ-kTiMjvtaoAQwbCrzytmQ@mail.gmail.com> <[ðŸ”Ž]Â 20181126232102.GA26495@virgil.dodds.net>


Steve Langasek <vorlon@debian.org> writes:
> Long ago I heard rumors of development work on mesa that would allow it to
> function as a proxy library, so that apps would link against libGL as needed
> and the GL implementation would use a hardware-accelerated GLES driver where
> possible, falling back to software GL where necessary.
This seems unlikely -- I believe GLES and GL have different semantics in
a few places which makes implementing GL on GLES inefficient; mostly
that GLES is missing stuff that GL applications often use, but I think
there are places where GLES is just different, including in how GLSL
works.
I haven't tried, but I would expect that applications could use both GL
and GLES APIs at the same time, even to the same window. If this does
work with Mesa, then linking Qt against GLES wouldn't restrict
applications using free drivers at least?
-- 
-keith
signature.asc