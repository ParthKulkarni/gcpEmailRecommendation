To : debian-devel@lists.debian.org
Subject : Re: concerns about Salsa
From : Philipp Kern <pkern@debian.org>
Date : Tue, 05 Jun 2018 13:21:25 +0200
Message-id : 0d601d0d0dadff4a8f4ab1fd5bc475d8@debian.org
In-reply-to : <[ðŸ”Ž]Â 20180604221230.xp2kyr2do5hvb7lf@mail.wookware.org>
References : <[ðŸ”Ž]Â 3155612.nf7Q4P6B6c@deblab> <[ðŸ”Ž]Â 23317.10360.626230.429328@chiark.greenend.org.uk> <[ðŸ”Ž]Â 20180604215221.s6ravo5kgmrgysmn@scru.org> <[ðŸ”Ž]Â 20180604221230.xp2kyr2do5hvb7lf@mail.wookware.org>


On 2018-06-05 00:12, Wookey wrote:
I have been reimplementing buildd recently and we had this discussion 
again. As it turns out it's much desired by DSA not to do that, for a 
bunch of reasons, like the tripwires they set. So it seems that the 
preferred approach is now to use lingering and let users run their 
systemd services as their user. So I scrapped the original packaging 
plan and you end up with a systemd tree that is maintained either by an 
outside tool or from a git tree.
I still hold that as soon as you are running a production service of 
some kind you are likely better off not using packages from Debian. You 
need to respond to outages and patch things and actually be able to do 
code changes recently quickly in the limited time volunteers have. And 
using packages not from Debian proper is frowned upon on Debian 
infrastructure. And to some degree I guess rightly so - as long as we 
have no trusted infrastructure producing the moral equivalent to PPAs.
Now I don't say that it isn't valuable to have packages in case someone 
runs something in the background. Just like there should be a solid 
solution for repository management, there should be one for building. 
But the infrastructure needs of Debian itself are different.
Kind regards
Philipp Kern