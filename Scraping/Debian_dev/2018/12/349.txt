To : debian-devel@lists.debian.org
Subject : Re: Proposal: Repository for fast-paced package backports
From : Pirate Praveen <praveen@onenetbeyond.org>
Date : Wed, 26 Dec 2018 20:29:17 +0530
Message-id : e2e31a5c-9cfb-d046-dcd5-2b94e7571353@onenetbeyond.org
In-reply-to : <[ðŸ”Ž]Â 20181226140549.GA14510@debian.org>
References : <[ðŸ”Ž]Â 20181225204607.GD32147@portux.naturalnet.de> <[ðŸ”Ž]Â 12697F3A-585A-45EF-9DC1-287004D5F5B6@onenetbeyond.org> <[ðŸ”Ž]Â 20181226140549.GA14510@debian.org>


[As requested, keeping it to -devel only]
On 12/26/18 7:35 PM, Antonio Terceiro wrote:
> On Wed, Dec 26, 2018 at 01:04:44PM +0530, Pirate Praveen wrote:
>> If it has to be completely separate from -backports, it means some packages will need to be maintained twice, even when they meet the criteria for backports fully, just because a package in volatile declare a dependency on them.
> 
> There is nothing that stops you, or whoever wants to maintain this newn
> repository from doing it in a way that 1) reuses what's already in
> backports, even automatically and 2) adds the bits that are not deemed
> appropriate for backports.
> 
The -backports team does not want the dependencies of gitlab to be in
-backports even though it meets the criteria for backports. So we will
end up adding it to volatile. Now if some one else wants the same in
-backports, they will have to repeat the process.
Take nodejs or npm for example, which I backported now. In buster the
-backports team does not want it in backports if I'm doing it for
gitlab, even though they satisfy the requirement for -backports. So we
will end up uploading these to volatile, if someone else wants it in
-backports, they will have to do it again.
It is one way (volatile can use -backports, but -backports can't use
volatile). I'm fine with that if people don't want our work for volatile
not added to -backports.
Dominik,
I think we can go ahead with volatile as separate suite and take
packages from -backports if exist but add all new dependencies to -volatile.
This,
"Dependencies on other packages in volatile should be avoided if
possible. Especially, dependencies of the package that also need
backporting must not be added to volatile just because they are
dependenciesâ€Šâ€”â€Ševery dependency that is needed to be backported to
support the volatile package must be considered on its own and in all
but unprobable edge cases be maintained as a formal backport. Obviously,
the unprobable edge case occurs when the package depends on another
package that also fully qualifies for volatile, as described above."
should be changed to,
"Dependencies of the package that also need backporting must be added to
volatile."
signature.asc