To : James McCoy <jamessan@debian.org>, debian-backports@lists.debian.org,	debian-devel@lists.debian.org, devscripts@packages.debian.org
Subject : Re: announcing backport script designed to reduce potential human errors
From : Nicholas D Steeves <nsteeves@gmail.com>
Date : Mon, 22 Oct 2018 20:07:38 -0400
Message-id : 20181023000736.cgj7c3gw5ittsvdk@DigitalMercury.dynalias.net
In-reply-to : <20181022231651.gafwbhocibtvffcn@odin.jamessan.com>
References : <20181022213305.hzs6piz55oqowvl6@DigitalMercury.dynalias.net> <20181022231651.gafwbhocibtvffcn@odin.jamessan.com>


Fixed debian-devel@debian.org -> debian-devel@lists.debian.org so that
people who reply won't have to do this to avoid bounced emails.  Sorry
for the mistake!
Hi James,
On Mon, Oct 22, 2018 at 07:16:51PM -0400, James McCoy wrote:
> On Mon, Oct 22, 2018 at 05:33:06PM -0400, Nicholas D Steeves wrote:
> > I'm not sure if a something like this is worth including in
> > devscripts, but I found that it wasn't fun to worry about all the
> > potential mistakes one could make when building formal backports, so
> > I've been using a script to prevent errors such as:
> 
> There was a previous request for something like this in #660208.  At
> the time, I suggested trying to merge the functionality of the proposed
> script with one that Russ Allbery used.
> 
> It's been a long time since I looked at either of them, so I forget much
> of the details.
Thank you for the feedback and for links to past efforts and
discussions!  It would seem that a README is necessary, so I wrote a
very quick 1st draft quality one:
  https://salsa.debian.org/sten-guest/backport/blob/master/README.md
tldr; my effort focuses on the stage of building a formal backport
correctly, rather than automating the work of
src_package_from_testing->backported_src_package.
In terms of "big project" ideas, I think it would be neat if there was
a tool that integrated the pkg_from_testing->no_change_bpo
transformation, my tool, and also "Rebuild all the Things" (Sean
Whitton told me about this tool).
  https://github.com/Debian/ratt
That, however, would be a big project...but it would be cool to point
it at a leaf package and have the tool output the whole stack,
skipping the packages that are already fulfilled via stable!
If a team formed to work on this effort I would be interested to work
on the builder abstraction and correctness checks, so as long as this
doesn't require Perl ;-)  Oh, and this hypothetical project would be
post buster release.
Warm regards,
Nicholas
signature.asc