To : debian-devel@lists.debian.org, russell-debian@stuart.id.au
Subject : Re: What can Debian do to provide complex applications to its users?
From : Didier 'OdyX' Raboud <odyx@debian.org>
Date : Thu, 01 Mar 2018 09:41:02 +0100
Message-id : 21720773.11azFvAFpa@odyx.org
In-reply-to : <1519790270.7383.15.camel@stuart.id.au>
References : <151879250395.15777.11687709733947019960.reportbug@x260-buxy.home.ouaza.com> <1747528.3EBMEs4rXA@odyx.org> <1519790270.7383.15.camel@stuart.id.au>


Le mercredi, 28 février 2018, 04.57:50 h CET Russell Stuart a écrit :
> On Tue, 2018-02-27 at 14:13 +0100, Didier 'OdyX' Raboud wrote:
> > > - we could ship those applications not as .deb but as container
> > >
> > >   and let them have their own lifecycle
> > 
> > tl;dr: a new package format is needed, with a new non-suite-specific 
> > repository is needed to bring the Debian added-value to these
> > ecosystems.
> 
> To me 'container' is the right solution.
For me, this is orthogonal.  How your binaries or artifacts are orchestrated 
and isolated from eachothers doesn't have much to do with where they come from 
and how they're built.
I'm not looking forward to having to maintain hierarchies of containers in 
which software is pulled from various different sources which don't have a 
shared agreement on what constitutes Free Software, sane security guidelines, 
etc.  Ewww, wait…
The hard problem is how to keep fostering and providing the four software 
freedoms, not (only) how to ship software.
> (a grandiose and far fetched proposal)
I don't disagree that smart containerization would make a better Debian.  But 
not if we loose track of what binary gets installed from which source.  
Reproducibility and traceability are really important, and we should not throw 
them away for sake of more convenient software deployment.
Cheers,
	OdyXsignature.asc