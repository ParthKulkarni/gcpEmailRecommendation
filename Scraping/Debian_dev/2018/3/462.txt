To : debian-devel@lists.debian.org
Subject : Re: Usage of real m68k hardware
From : Ole Streicher <olebole@debian.org>
Date : Wed, 28 Mar 2018 11:26:56 +0200
Message-id : ytzy3icy2hr.fsf@news.ole.ath.cx
References : <[ðŸ”Ž]Â 20180328063809.6omgul5dh5yq4nek@an3as.eu> <[ðŸ”Ž]Â 9c80cfc5-5c7b-c3c8-e91d-185c3075b103@physik.fu-berlin.de> <[ðŸ”Ž]Â 20180328075912.77yzl4yxovkxchfw@an3as.eu> <[ðŸ”Ž]Â 54a6cb99-6691-9388-39f3-96adce64f285@physik.fu-berlin.de>


John Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de> writes:
> I have worked as a physicist myself for a long time and also did numerical
> physics and have dealt with a lot of software written by scientists. The
> quality of scientific software is usually of exceptional low quality
> because 90% of those scientists are neither programmers nor do they
> care of adhering to any common quality standards when developing
> software.
Being a physcist myself: Honestly, you are distributing FUD here. Sure,
there software like this. But this is rarely the software we have in
Debian, for a number of reasons (speaking for astrophysics, which is my
topic):
 * There is a specialization that people concentrate on doing software,
   still being scientists,
 * software engineers are specifically hired to develop or support
   science software,
 * Communication and critics within the community (wrt. software)
   strongly increased, partly due to Github, which is a great platform
   here. This is accompanied with a general move towards the Bazaar
   development model.
As the highlight example, you may take Astropy, https://www.astropy.org
This is developed by more than hundred people (github says: "241
contributors"), mostly volunteers, backed by (very) few professionals. A
great community, excellent communication into all directions, and a very
high code quality.
Astropy comes with an "affiliated package" concept, which invites people
to contribute their own software, with a review process that keeps the
software quality high there as well.
Ofcourse, there is still low-quality software. But apart from very
specific code, the major problem here is *old* (*OLD*!) software that
was written by software engineers. Software written in the 80s or 90s,
with very questionable hacks to save 10 bytes, only partially
documented, often unclear copyright and licensing, bad upstream
communication etc. But still needed, either since they still are the
only solution, or as a reference. IRAF is the archetype for all this in
my field.
So, it is a wrong prejudice that we have low quality software because of
unexperienced and ignorant scientists.
> Furthermore, from my own experience, most people compile scientific
> software from source anyway due to performance reasons, especially
> when it comes to using them for large calculations.
This is not true, and it was not true in the past:
Since there are now many professional and optimized libraries for a lot
of standard tasks (FFT, algebra etc.), and thanks to the raise of
Python, many scientists (astrophysicists) do not require self-compiled
software anymore. Since we move away from the NIH syndrom, dependencies
play a greater role than before, and are solved by packaging frameworks
(PIP, {Astro}Conda as distribution agnostic examples).
And in the Good Old Times, the installation from source was so
complicated (IRAF!) that people just took the binary tarballs.
The field (in astrophysics) where your assumption is correct is
cosmological simulations ("gadget" as an example here). Unpackaged
exactly because of this.
> So I don't see a point for having to package all of that in Debian.
Some statistics: in astrophysics, we have a "Source Code Library"
https://ascl.net which tries to collect all the source code people wrote
for their (refereed) science. About 6 percent (93 out of ~1600) of them
are currently packaged for Debian.
That is not exactly "all of that", but it is what people need to do
astrophysics (well, almost. White areas still exist).
Best regards
Ole