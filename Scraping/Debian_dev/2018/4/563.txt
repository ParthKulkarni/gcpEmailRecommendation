To : debian-devel@lists.debian.org
Subject : Re: Please do not drop Python 2 modules
From : Thomas Goirand <zigo@debian.org>
Date : Fri, 27 Apr 2018 15:08:24 +0200
Message-id : 58179d18-b81f-f9ff-e562-31e5d561dd9d@debian.org
In-reply-to : <[ðŸ”Ž]Â 20180426171442.GV3347@localhost>
References : <[ðŸ”Ž]Â 20180421175755.GC3347@localhost> <[ðŸ”Ž]Â 1524333876.2526572.1346033056.5884A039@webmail.messagingengine.com> <[ðŸ”Ž]Â dd06f3bb-af0b-8739-fa39-dacbcfe18ca2@jmuchemb.eu> <[ðŸ”Ž]Â 1524468712.4155143.1347213280.2CAD2E48@webmail.messagingengine.com> <[ðŸ”Ž]Â 23261.50800.1777.250053@chiark.greenend.org.uk> <[ðŸ”Ž]Â c7bbeb4b-8a27-602d-6a64-cc48bc79fb52@debian.org> <[ðŸ”Ž]Â 20180425161402.GS3347@localhost> <[ðŸ”Ž]Â a1ea3558-8c66-b994-b836-56eae8c8463f@debian.org> <[ðŸ”Ž]Â 20180426171442.GV3347@localhost>


On 04/26/2018 07:14 PM, Adrian Bunk wrote:
> On Thu, Apr 26, 2018 at 12:03:56AM +0200, Thomas Goirand wrote:
>> On 04/25/2018 06:14 PM, Adrian Bunk wrote:
>>> On Tue, Apr 24, 2018 at 12:10:12AM +0200, Thomas Goirand wrote:
>>>> ...
>>>> This cannot go on, and on, and on, and on... We have to send a clear
>>>> message on the right direction, which is Python 2 removal. Yes, removal!
>>>> Why are we even discussing this? Isn't it obvious?
>>>
>>> It is not for us to decide what tools our users should use,
>>> we should support them no matter what tools they have to use.
>>
>> I'd really love if it was the case. Reality is otherwise.
>>
>> What if our users want to use Python 2.4? Will we do it? Of course not,
>> at some point, we may say it's not doable reasonably, because of the
>> lost of upstream support and the work it involves to keep it alive. So
>> yes, it's up to us to decide what we're able or what we want to do for
>> our users, and our users cannot dictate what tool we must maintain. It
>> has to be the other way around, like it or not.
> 
> We (Debian) have decided to support Python 2.7 in buster, like it or not.
Adrian,
You've made general comments about supporting our users, and I reacted
to that and wrote that we can't always please our users because of real
world difficulties to do that.
Now, if you're back to supporting Python 2.7, if the Debian project is
committed to that, of course, I support the decision if it's a team
decision!
>> That's not the question I was asking. I was asking if someone is
>> volunteering for the next 5 years (ie: Buster + LTS support, that's
>> quite a huge commitment).
> 
> LTS is an effort by a 3rd party external company,
> what and how they support in LTS is not our problem.
Wow, hopefully not ! LTS is an effort by the Debian project. What the
external company does  is an effort to *FUND* individual to work on it.
Currently, only Freexian does this sponsor gathering and redistribution
work, but it's my understanding that it would be perfectly valid (but
IMO probably not desirable at this point) that another company competes
with this funding effort.
That's a huge difference. If it was only the way you wrote, IE only a
private company stuff, then the LTS uploads wouldn't be allowed on the
Debian infrastructure. If here, I'm mistaking, then please, correct me,
and let's discuss again about LTS and how Debian supports it.
So yes, LTS is fully part of the Debian project, and how Python 2.7 is
supported should IMO very much be our concern. Now, we think that we
should only support Python 2.7 for more than until Buster is EOL and
becomes an LTS, I support this restriction. Though it'd be nice if we
had this consensus before Buster is frozen and have the discussion
closed early.
On 04/26/2018 08:04 PM, Adrian Bunk wrote:
> We already had several cases of a changelog for a new Debian revision
> that looked approximately:
>   * move vcs to salsa
>   * Standards-Version: 4.1.3
>   * remove python2 package
>
> Soon afterwards there was an RC bug because this removed package still
> had a two digit number of reverse dependencies.
That is very wrong, I very much agree with what you wrote just above.
But what about softly removing Python 2 support when there's no reverse
(build-)dependency in the archive, like I already started to do here and
there? Do you think that's acceptable?
If you do think it's acceptable, then why not starting that effort as
soon as possible, since it takes a much much longer time to do things
this way, which is also the way that is the least disrupting for our
users? (/me just earned a godwin point for invoking social contract #4:)
Cheers,
Thomas Goirand (zigo)