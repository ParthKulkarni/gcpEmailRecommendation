To : debian-devel@lists.debian.org
Subject : Re: Please do not drop Python 2 modules
From : Adrian Bunk <bunk@debian.org>
Date : Thu, 26 Apr 2018 20:14:42 +0300
Message-id : 20180426171442.GV3347@localhost
In-reply-to : <[ðŸ”Ž]Â a1ea3558-8c66-b994-b836-56eae8c8463f@debian.org>
References : <[ðŸ”Ž]Â 20180421175755.GC3347@localhost> <[ðŸ”Ž]Â 1524333876.2526572.1346033056.5884A039@webmail.messagingengine.com> <[ðŸ”Ž]Â dd06f3bb-af0b-8739-fa39-dacbcfe18ca2@jmuchemb.eu> <[ðŸ”Ž]Â 1524468712.4155143.1347213280.2CAD2E48@webmail.messagingengine.com> <[ðŸ”Ž]Â 23261.50800.1777.250053@chiark.greenend.org.uk> <[ðŸ”Ž]Â c7bbeb4b-8a27-602d-6a64-cc48bc79fb52@debian.org> <[ðŸ”Ž]Â 20180425161402.GS3347@localhost> <[ðŸ”Ž]Â a1ea3558-8c66-b994-b836-56eae8c8463f@debian.org>


On Thu, Apr 26, 2018 at 12:03:56AM +0200, Thomas Goirand wrote:
> On 04/25/2018 06:14 PM, Adrian Bunk wrote:
> > On Tue, Apr 24, 2018 at 12:10:12AM +0200, Thomas Goirand wrote:
> >> ...
> >> This cannot go on, and on, and on, and on... We have to send a clear
> >> message on the right direction, which is Python 2 removal. Yes, removal!
> >> Why are we even discussing this? Isn't it obvious?
> > 
> > It is not for us to decide what tools our users should use,
> > we should support them no matter what tools they have to use.
> 
> I'd really love if it was the case. Reality is otherwise.
> 
> What if our users want to use Python 2.4? Will we do it? Of course not,
> at some point, we may say it's not doable reasonably, because of the
> lost of upstream support and the work it involves to keep it alive. So
> yes, it's up to us to decide what we're able or what we want to do for
> our users, and our users cannot dictate what tool we must maintain. It
> has to be the other way around, like it or not.
We (Debian) have decided to support Python 2.7 in buster, like it or not.
At that point it is not up to individual maintainers to sabotage
Python 2.7 support in buster by dropping Python 2 packages without
a valid technical reason.
"I want Python 2 to die" is not a valid technical reason here.
> >> Python 3 was released the 3rd of December 2008. 2020 is 12 years later.
> >> How many more years does one think we need until we send the message
> >> that yes, we should port our app/module to Python 3? Sorry, but legacy
> >> *must* die, as it doesn't have upstream support.
> > 
> > Why does legacy "*must*" die?
> 
> Any code that isn't updated to be able to run with the newest of
> everything it uses (library or interpreter) is in danger of becoming not
> maintainable in the long run. That's exactly what we're doing everywhere
> in Debian: each time a new version of something is out, all the reverse
> (build-)dependencies must be updated to support it.
We are not doing this everywhere in Debian.
For software like Python or Tcl we are shipping and security-supporting
two different versions in stable.
>...
> > Maintaining the Python 2 interpreter is actually reasonably trivial.
> 
> That's not the question I was asking. I was asking if someone is
> volunteering for the next 5 years (ie: Buster + LTS support, that's
> quite a huge commitment).
LTS is an effort by a 3rd party external company,
what and how they support in LTS is not our problem.
Our python2.7 maintainer has already stated in this thread:
  otoh, I would be fine to have a very reduced set of python2 apps in 
  buster+1, if that's needed.
> > there are other distributions who will create security fixes
> > for the Python 2 interpreter for many years to come).
> 
> There's no such thing (yet?) as a cross-distro security team, unfortunately.
An advantage of code that is dead upstream is that everyone ships the 
same sources.
This makes porting fixes from one distribution to another trivial.
> Cheers,
> 
> Thomas Goirand (zigo)
cu
Adrian
-- 
       "Is there not promise of rain?" Ling Tan asked suddenly out
        of the darkness. There had been need of rain for many days.
       "Only a promise," Lao Er said.
                                       Pearl S. Buck - Dragon Seed