To : debian-devel@lists.debian.org
Subject : Re: Please do not drop Python 2 modules
From : Thomas Goirand <zigo@debian.org>
Date : Thu, 26 Apr 2018 00:03:56 +0200
Message-id : a1ea3558-8c66-b994-b836-56eae8c8463f@debian.org
In-reply-to : <[ðŸ”Ž]Â 20180425161402.GS3347@localhost>
References : <[ðŸ”Ž]Â 20180421175755.GC3347@localhost> <[ðŸ”Ž]Â 1524333876.2526572.1346033056.5884A039@webmail.messagingengine.com> <[ðŸ”Ž]Â dd06f3bb-af0b-8739-fa39-dacbcfe18ca2@jmuchemb.eu> <[ðŸ”Ž]Â 1524468712.4155143.1347213280.2CAD2E48@webmail.messagingengine.com> <[ðŸ”Ž]Â 23261.50800.1777.250053@chiark.greenend.org.uk> <[ðŸ”Ž]Â c7bbeb4b-8a27-602d-6a64-cc48bc79fb52@debian.org> <[ðŸ”Ž]Â 20180425161402.GS3347@localhost>


On 04/25/2018 06:14 PM, Adrian Bunk wrote:
> On Tue, Apr 24, 2018 at 12:10:12AM +0200, Thomas Goirand wrote:
>> ...
>> This cannot go on, and on, and on, and on... We have to send a clear
>> message on the right direction, which is Python 2 removal. Yes, removal!
>> Why are we even discussing this? Isn't it obvious?
> 
> It is not for us to decide what tools our users should use,
> we should support them no matter what tools they have to use.
I'd really love if it was the case. Reality is otherwise.
What if our users want to use Python 2.4? Will we do it? Of course not,
at some point, we may say it's not doable reasonably, because of the
lost of upstream support and the work it involves to keep it alive. So
yes, it's up to us to decide what we're able or what we want to do for
our users, and our users cannot dictate what tool we must maintain. It
has to be the other way around, like it or not.
>> Python 3 was released the 3rd of December 2008. 2020 is 12 years later.
>> How many more years does one think we need until we send the message
>> that yes, we should port our app/module to Python 3? Sorry, but legacy
>> *must* die, as it doesn't have upstream support.
> 
> Why does legacy "*must*" die?
Any code that isn't updated to be able to run with the newest of
everything it uses (library or interpreter) is in danger of becoming not
maintainable in the long run. That's exactly what we're doing everywhere
in Debian: each time a new version of something is out, all the reverse
(build-)dependencies must be updated to support it.
So, legacy code must be either updated to support newer environment, or
just die if nobody can support it...
> In real life many of our users have to support huge amounts of code 
> written in Python 2.
Of course! And it's the same for old versions of PHP, Java, etc. This
isn't a valid point of argumentation to tell there's legacy code that we
need to support. The only thing we can discuss is for how long we can
continue to support it without too much effort.
> There are big codebases written in languages like Tcl around,
> so still using Python 2 doesn't strike me as exceptionally weird.
There's still companies offering hosting with php 4... It doesn't mean
it's reasonable to continue to support it.
> Maintaining the Python 2 interpreter is actually reasonably trivial.
That's not the question I was asking. I was asking if someone is
volunteering for the next 5 years (ie: Buster + LTS support, that's
quite a huge commitment).
> there are other distributions who will create security fixes
> for the Python 2 interpreter for many years to come).
There's no such thing (yet?) as a cross-distro security team, unfortunately.
Cheers,
Thomas Goirand (zigo)