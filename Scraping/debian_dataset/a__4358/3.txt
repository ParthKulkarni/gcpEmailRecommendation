To : Joseph Herlant <aerostitch@debian.org>
Subject : Re: Asciidoc transition to the python3 implementation or just EOL
From : Ian Jackson <ijackson@chiark.greenend.org.uk>
Date : Mon, 8 Oct 2018 13:04:52 +0100
Message-id : 23483.18404.380540.396848@chiark.greenend.org.uk
In-reply-to : <[ðŸ”Ž]Â CAPQicOx26j3Mr65+KyrjSNamevzYdjKWporjfQx1XNvRf5Vtjg@mail.gmail.com>
References : <[ðŸ”Ž]Â CAPQicOx26j3Mr65+KyrjSNamevzYdjKWporjfQx1XNvRf5Vtjg@mail.gmail.com>


Joseph Herlant writes ("Asciidoc transition to the python3 implementation or just EOL"):
> There are currently 2 ways possible to handle the transition:
Follows, 3 ways :-).
Why would a user want the old python2 asciidoc ?  AFAICT from the
outside of the program the implementation language is a hidden
detail.
Do the two versions have different bugs so that you might want one lot
of bugs (from the py2 version) for one use case and one lot of bugs
(from the py3 version) for others ?
> 1. create a new package named asciidoc-py3 and have all the
> dependencies moved to it
If the answer to the questions above reveals a reason why a user might
need or wnat the py2 version, then you should make different package
names and make them coinstallable.
Whether the dependencies should move depends on what their needs are.
> 2. change the source of the asciidoc package to point to the
> asciidoc-py3 repo (and create a new fake tag as upstream still didn't
> cut a tag on it)
This is probably fine.  Please tell me that upstream intend NOT to
reuse version numbers from the py2 version.
> 3. have people just move to asciidoctor (it's way more actively
> maintained and tested, plus, most package support both nowadays) and
> just let the python implementation die naturally
I know nothing about this.  What are the relative advantages and
disadvantages of asciidoctor vs asciidoc ?  Do they process the same
documents in exactly the same way ?
Stepping back: as maintainer I think you need to have an opinion about
whether our users are best served by one of asciidoc (py3), asciidoc
(py2), asciidoctor, or by some combination of alternatives.
Perhaps there is one of these which is clearly better than all the
others - and, in particular, is *no worse* for any particular use case
or particular input documents.  In that case we can just have that
one.
If different programs are better for different uses or different
documents, then ideally we would provide those different options.
That is extra effort of course.  So if you don't have the effort for
that then maybe you want to drop some of the variants, but in that
case you should probably check around to see if anyone else wants to
take on the work.
Ian.