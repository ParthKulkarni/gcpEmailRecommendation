To : debian-devel@lists.debian.org
Subject : Re: Debian Policy 4.1.4.0 released
From : Andreas Tille <andreas@an3as.eu>
Date : Wed, 11 Apr 2018 15:18:32 +0200
Message-id : 20180411131832.bs2f5obra7e42pyk@an3as.eu
In-reply-to : <[ðŸ”Ž]Â 87efjqt6pe.fsf@debian.org>
References : <877epl639k.fsf@iris.silentflame.com> <[ðŸ”Ž]Â 85lgdzx39l.fsf@benfinney.id.au> <[ðŸ”Ž]Â 87a7ufe7ed.fsf@debian.org> <[ðŸ”Ž]Â 20180407112349.eoz7rbwtcu3ee3rq@angband.pl> <[ðŸ”Ž]Â 871sfrdzay.fsf@debian.org> <[ðŸ”Ž]Â 87po3b2ehh.fsf@iris.silentflame.com> <[ðŸ”Ž]Â 87muyeuage.fsf@debian.org> <[ðŸ”Ž]Â 14nope-e91.ln1@argenau.bebt.de> <[ðŸ”Ž]Â 87efjqt6pe.fsf@debian.org>


On Sun, Apr 08, 2018 at 10:58:53AM +0200, Ole Streicher wrote:
> >
> > Imho Sean's last mail sums it up pretty well
> > https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=515856#94
> 
> I have read this, but it does not convince me. My rule to get the
> upstream packagage was always: use uscan, if d/watch exists, otherwise
> use get-orig-source. Sounds pretty simple and straigt-forward. If it
> fails, I had a starting point where to debug (usually just a missing
> dep). I see no reaso why this should be given up.
I agree with Ole.  While I took over some ideas from this thread how to
get rid of some get-orig-source targets by using mode=git I think it
makes perfectly sense to define a target name that should be used in
case uscan can not be used exclusively to fetch upstream source.  I can
not see in how far definition of the target name will harm - but from
the point of team maintenance it helps to know where to look first to
download a new upstream version.
BTW, I have standardized all my packages to
get-orig-source:
	. debian/get-orig-source
In other words: I'm fine with removing the target in rules and replace
it by:
    If there are reasons why uscan can not fetch the upstream source it
    is recommended to provide a script debian/get-orig-source .
If we do not provide *code* to get the upstream source and just settle
to some (however vague) description in d/README.source random package
developers who might work on a package will end up with different
results.  This should not be the outcome of a policy change.
Kind regards
      Andreas.
-- 
http://fam-tille.de