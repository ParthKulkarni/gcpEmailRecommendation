To : "Enrico Weigelt\, metux IT consult" <lkml@metux.net>
Subject : Re: git vs dfsg tarballs
From : Ian Jackson <ijackson@chiark.greenend.org.uk>
Date : Mon, 19 Nov 2018 12:52:12 +0000
Message-id : 23538.45564.887591.14863@chiark.greenend.org.uk
In-reply-to : <[ðŸ”Ž]Â bdac38db-1551-2fce-9662-fcf915b716c5@metux.net>
References : <[ðŸ”Ž]Â bdac38db-1551-2fce-9662-fcf915b716c5@metux.net>


Enrico Weigelt, metux IT consult writes ("git vs dfsg tarballs"):
> Can we agree on some auomatically reproducable (and inversable)
> transformation process from orig to dfsg tree
Clearly the transformation on the *tree* can't be reversible because
in the usual case it is deleting things.  So you'll need the history.
With most gitish workflows, the corresponding pre-dfsg upstream
*commit* can be found with `git-merge-base', assuming you have some
uploaded (or pushed) Debian commit and a suitable upstream branch.
> My preferred way (except for rare cases where upstream history is
> extremely huge - like mozilla stuff) would be just branching at the
> upstream's release tag and adding commits for removing the non-dfsg
> files ontop of that. From that branching the debianized branch,
> where all patches are directly applied in git.
I think that most of the workflows recommended in these manpages
  https://manpages.debian.org/stretch-backports/dgit/dgit-maint-gbp.7.en.html
  https://manpages.debian.org/stretch-backports/dgit/dgit-maint-merge.7.en.html
  https://manpages.debian.org/stretch-backports/dgit/dgit-maint-debrebase.7.en.html
ought to have the property I describe above, which I think is
sufficient for you ?
Ian.
-- 
Ian Jackson <ijackson@chiark.greenend.org.uk>   These opinions are my own.
If I emailed you from an address @fyvzl.net or @evade.org.uk, that is
a private address which bypasses my fierce spamfilter.