To : debian-devel@lists.debian.org,  debian-dpkg@lists.debian.org
Subject : Re: Feedback on 3.0 source format problems
From : Johannes Schauer <josch@debian.org>
Date : Sun, 08 Jan 2017 13:05:37 +0100
Message-id : 148387713749.12501.13831008108877913785@localhost
Mail-followup-to : James Clarke <jrtc27@debian.org>, , "Thibaut Paumard" <thibaut.paumard@obspm.fr>, debian-devel@lists.debian.org, debian-dpkg@lists.debian.org
In-reply-to : <[ðŸ”Ž]Â 20170108111407.GA84878@Jamess-MacBook.home>
References : <[ðŸ”Ž]Â 148383683147.12501.5702048653172544292@localhost> <[ðŸ”Ž]Â 20170108111407.GA84878@Jamess-MacBook.home>


Hi all,
Mattia, please see below for a pbuilder-specific question.
Quoting James Clarke (2017-01-08 12:14:07)
> This turns out to be true. Working in a patches-applied tree:
> 
>     $ dpkg-source --before-build .
>     $ dpkg-source -b .
>     $ dpkg-source --after-build .
> 
> leaves the patches applied. Working in a patches-unapplied tree, the
> patches are unapplied during the --after-build. This seems to do exactly
> what you want, with the caveat that, if patches are only *part*-applied,
> they will be completely unapplied by the --after-build, but this seems
> like a very strange edge-case.
> 
> This behaviour is exactly what pdebuild has been doing forever (and
> therefore git-buildpackage --git-pbuilder and others).
I'm not very familiar with pbuilder. Looking at the man page it seems that
pbuilder itself exclusively accepts a source package .dsc and for building a
source directory one needs the pdebuild wrapper?
If that is the case, then it seems sensible for sbuild to do the same as
pdebuild if given a source directory only. Both tools should behave the same
way when executed in the same context, I think.
Are there any reasons against this plan? (targeting Buster)
Thanks!
cheers, josch
signature.asc