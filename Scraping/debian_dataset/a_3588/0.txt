To : Michael Meskes <meskes@debian.org>
Subject : Re: What can Debian do to provide complex applications to its users?
From : Gunnar Wolf <gwolf@debian.org>
Date : Sat, 17 Feb 2018 15:19:12 -0600
Message-id : 20180217211912.krs53tjrgyqdglc5@gwolf.org
In-reply-to : <[ðŸ”Ž]Â 1518872273.2785.48.camel@debian.org>
References : <[ðŸ”Ž]Â 1518796684.2867.116.camel@debian.org> <[ðŸ”Ž]Â e7bb0d56-1333-11e8-9b6a-00163eeb5320@msgid.mathom.us> <[ðŸ”Ž]Â 20180216171204.GB4131@feivel> <[ðŸ”Ž]Â 87vaew939z.fsf@iris.silentflame.com> <[ðŸ”Ž]Â 20180216192119.GA3755@fama> <[ðŸ”Ž]Â 20180216194127.GB3202@feivel> <[ðŸ”Ž]Â 20180216200408.GA5770@fama> <[ðŸ”Ž]Â 1518815226.1970.24.camel@debian.org> <[ðŸ”Ž]Â 20180217003208.mdegvm7mu5peyypl@gwolf.org> <[ðŸ”Ž]Â 1518872273.2785.48.camel@debian.org>


Michael Meskes dijo [Sat, Feb 17, 2018 at 01:57:53PM +0100]:
> > Minification is quite comparable to compilation. I will give you some
> > examples from my frustration with Drupal8 in this answer. This can no
> > longer be seen as source code:
> > ...
> 
> I disagree, it is not maintainable source code, yes, but source code
> nonetheless. According to wikipedia source code is:
> 
> In computing, source code is any collection of computer instructions,
> possibly with comments, written using[1] a human-readable programming
> language, usually as plain text.
> 
> I guess minified source code does qualify. However, this discussion is
> mood since the bigger lies in the modules that get included without any
> real documentation.
Some others have answered to this claim. As I understand it, source
code should ideally be the author's preferred form of
modification. That is clearly different from what a minified
representation is.
Even adjusting this a bit... Maybe not a preferred form of
modification, but a plausible form for performing support? Well, even
leaving the obvious change from a readable, indented set of
instructions to a single line with no comments nor anything to aid
humans to understand it, it also does not cut the bill. Minification
preserves function (and thus, calls to the stdlib and such are
discernible), but function and variable names are mangled. That is a
_huge_ obstacle for being able to fix anything but the most trivial
details. Of course, we cannot push our patches upstream.
> > But packaging the precise version that is required in each little
> > bump
> > is just impossible.
> 
> I get your point, I just don't accept the consequence that we should
> not package these applications.
Well, try to find somebody with time and motivation to _properly_ do
the packaging, and to keep it up for several years...
signature.asc