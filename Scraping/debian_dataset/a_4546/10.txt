To : debian-devel@lists.debian.org
Subject : Re: Announce: docker-buildpackage
From : Johannes Schauer <j.schauer@email.de>
Date : Wed, 02 May 2018 08:21:41 +0200
Message-id : 152524210157.30462.10385000744516703627@localhost
Mail-followup-to : Geert Stappers <stappers@stappers.nl>, Ian Jackson <ijackson@chiark.greenend.org.uk>, debian-devel@lists.debian.org
In-reply-to : <[ðŸ”Ž]Â 23272.31716.682215.929843@chiark.greenend.org.uk>
References : <[ðŸ”Ž]Â 4340a82e-15fc-1518-122a-c49273da1e5a@metux.net> <[ðŸ”Ž]Â CAKTje6G9YHB2zSZEt_1D1M0v9u3dcCuHTqRrya1O0aFN-Rq-mQ@mail.gmail.com> <[ðŸ”Ž]Â 20180501142549.GE26906@gpm.stappers.nl> <[ðŸ”Ž]Â 23272.31716.682215.929843@chiark.greenend.org.uk>


Quoting Ian Jackson (2018-05-01 16:38:28)
> Geert Stappers writes ("Re: Announce: docker-buildpackage"):
> > On Tue, May 01, 2018 at 09:41:13PM +0800, Paul Wise wrote:
> > > On Tue, May 1, 2018 at 9:23 PM, Enrico Weigelt, metux IT consult wrote:
> > > > I've written a tool for isolated deb builds in docker containers.
> > > > It's a little bit like pbuilder, but using docker for isolation.
> > > >
> > > > https://github.com/metux/docker-buildpackage
> > > 
> > > Does it have any advantages over whalebuilder?
> > 
> > https://tracker.debian.org/pkg/whalebuilder
> > 
> > Homepage: https://www.uhoreg.ca/programming/debian/whalebuilder
> > Debconf talk: https://debconf17.debconf.org/talks/84/
> 
> Do either of these things provide an autopkgtest virt server ?
> 
> That's an executable you can run and speak a protocol to do virty
> kinds of things.
> 
> sbuild and autopkgtest can use any virt system provided in that form.
Unfortunately, according to Martin [1] it is out of scope for autopkgtest to
also add support for making persistent changes to the underlying backend. This
in turn means, that an operation like:
    $ sbuild-update -udcar unstable
will never work for the autopkgtest backend.
I still think that it's a better idea to add another autopkgtest backend than
to write yet another sbuild/pbuilder-like tool. But for the autopkgtest backend
to really take off as an sbuild backend, maybe it would be possible to write a
tool that provides a common interface to make persistent changes to autopkgtest
backends? I don't know if it's possible for a third party application to plug
into autopkgtest and offer such functionality as part of its API?
Thanks!
cheers, josch
[1] https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=886332#20
signature.asc