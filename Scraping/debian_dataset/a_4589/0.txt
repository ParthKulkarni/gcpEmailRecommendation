To : Jose Miguel Parrella Romero <bureado@debian.org>, "debian-devel@lists.debian.org" <debian-devel@lists.debian.org>
Subject : Re: Explaining Debian's approach to QA
From : Paul Gevers <elbrus@debian.org>
Date : Mon, 21 May 2018 20:06:43 +0200
Message-id : 1ce158e2-ec86-9cd4-4eed-b38c5cdd45ca@debian.org
In-reply-to : <[ðŸ”Ž]Â BY1PR19MB0008771A9B293EBD3734C1D0C1960@BY1PR19MB0008.namprd19.prod.outlook.com>
References : <[ðŸ”Ž]Â BY1PR19MB0008771A9B293EBD3734C1D0C1960@BY1PR19MB0008.namprd19.prod.outlook.com>


Hi Jose,
On 20-05-18 21:26, Jose Miguel Parrella Romero wrote:
> Of course, for folks that live in a CI/CD environment where the build
> log and the stop light are the vehicles of accountability, the concept
> of a piuparts run happening after you've uploaded and getting a bug
> report that you then go address and "start over" is almost foreign to them.
I look at this differently. I see the upload to unstable as the commit
to the repository. We do checks like piuparts, installability checks,
and (since very recently) autopkgtest regression testing, which are used
to see if stuff can migrate to testing. The interesting delta with
respect to (what I think is) regular CI/CD is that one piece can pass,
while another can't. A software project move as a whole (I expect, I
have no experience), you get to keep the pieces if a commit breaks the
stuff, in Debian it "just" doesn't migrate. This all is codified:
https://salsa.debian.org/release-team/britney2/ and other archives of
the same team. In my eyes, your example of piuparts doesn't strike me
different than running tests on a commit to a software archive.
Paul
signature.asc