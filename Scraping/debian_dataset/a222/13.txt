To : Steffen MÃ¶ller <steffen_moeller@gmx.de>
Subject : Re: Auto-update for sid? Auto-backport?
From : Guido GÃ¼nther <agx@sigxcpu.org>
Date : Fri, 17 Nov 2017 16:31:43 +0100
Message-id : 20171117153143.qkxmfpqz2sgqii56@bogon.m.sigxcpu.org
Mail-followup-to : Guido GÃ¼nther <agx@sigxcpu.org>,	Steffen MÃ¶ller <steffen_moeller@gmx.de>,	debian-devel@lists.debian.org
In-reply-to : <[ðŸ”Ž]Â f6db377a-b082-fa64-29c7-e29d931aeb8c@gmx.de>
References : <[ðŸ”Ž]Â f6db377a-b082-fa64-29c7-e29d931aeb8c@gmx.de>


Hi,
On Wed, Nov 15, 2017 at 04:43:17PM +0100, Steffen MÃ¶ller wrote:
> Hello,
> 
> my QA page or our blend's task page (like
> https://blends.debian.org/med/tasks/bio-ngs) regularly informs me about
> updates that should be performed to packages I alone maintain or (more
> likely) with the help of my blend. The updates are often (but now
> always, admittedly) easy to do.
> 
> I would really like to see updates performed in some automated fashion.
> Maybe into a different section of Debian like sid-auto? The problem with
> that obviously is the missing scrutiny by the human maintainer, so it
> cannot go straight into sid. Or can it? Maybe with an auto-created bug
> report against the package so it does not auto-migrate into testing?
What I have started to do is having jobs that run once a day uscan,
rebase patches, build in pbuilder, run autopkgtests via pbuilder's
autopkgtest hook[1] (to be put into a Jenkins instance).
That's about 99% of the busy work since I know in advance which packages
will need work (because patches no longer apply, tests fail or lintian
reports errors) while others can be uploaded right away after more
manual testing (if they don't have excessive test suites). Would that
help already? if so we could look into making this more usable to
others.
> A similar situation I see with backports. Most commonly all that is
> needed is a recompilation. Would an automation of that process be
> acceptable? Would it be acceptable for packages that offer some means of
> automated testing and are in backports already?
> 
> Many thanks for your opinions
> 
> Steffen
> 
[1]: /usr/share/doc/git-buildpackage/examples/gbp-try-ff