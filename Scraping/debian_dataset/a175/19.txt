To : debian-devel@lists.debian.org
Subject : Re: New lintian warning: vcs-deprecated-in-debian-infrastructure
From : Simon McVittie <smcv@debian.org>
Date : Fri, 23 Mar 2018 14:47:33 +0000
Message-id : 20180323144733.GA31798@espresso.pseudorandom.co.uk
In-reply-to : <[ðŸ”Ž]Â 0306e41b-eed2-9c5f-2a7d-1499dc5a7777@debian.org>
References : <[ðŸ”Ž]Â 20180322085850.wr5cao6cotq3nh7m@an3as.eu> <[ðŸ”Ž]Â 1521715664.3514.29.camel@liw.fi> <[ðŸ”Ž]Â 20180322144021.GA4960@thunder.hadrons.org> <[ðŸ”Ž]Â d2342ec4-3927-8553-0c41-c3676d4efd0c@debian.org> <[ðŸ”Ž]Â 20180323042757.GB31274@gaara.hadrons.org> <[ðŸ”Ž]Â 0306e41b-eed2-9c5f-2a7d-1499dc5a7777@debian.org>


On Fri, 23 Mar 2018 at 13:56:09 +0100, Markus Koschany wrote:
> If you were involved in team maintenance you would know that the
> Uploaders field is often completely outdated. The only way you can see
> who maintains a package is by looking at the Git history or upload
> history in tracker.debian.org. We had/have contributors who were
> mentioned as Uploaders in hundreds of packages and now they only can be
> removed by uploading a new package.
Or, alternatively, you work around the current d/control arrangement like
the GNOME team does, and auto-generate the Uploaders at upload-time from a
list of team members and the most recent uploaders in the changelog, which
to be honest seems fairly pointless: consumers of this information typically
have access to the changelog and can equally well see who uploaded the
package for themselves.
(I don't recommend going this route: it's fighting against generic
packaging infrastructure assumptions like "d/control is its own source
code".)
> Well, you can adjust Lintian in a way to check the web service for the
> information which was formerly present in debian/control and get all the
> warnings and errors people like
By design, Lintian can't actually do this (it looks at individual
packages in isolation), but a Lintian-like service definitely could
(like the way we now get warnings on tracker.d.o or on UDD about
Multi-arch fields, duplicated data files, failing uscan runs, and similar
external-to-the-package issues that Lintian cannot check).
    smcv