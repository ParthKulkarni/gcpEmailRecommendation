To : debian-devel@lists.debian.org, debian-backports@lists.debian.org
Subject : Re: Proposal: Repository for fast-paced package backports
From : Philipp Kern <pkern@debian.org>
Date : Wed, 26 Dec 2018 20:04:05 +0100
Message-id : 548fd34b-3320-cdba-4f3c-92a24bbb8043@philkern.de
In-reply-to : <[ðŸ”Ž]Â 20181226183111.GY6770@portux.naturalnet.de>
References : <[ðŸ”Ž]Â 20181225204607.GD32147@portux.naturalnet.de> <[ðŸ”Ž]Â ee6454f1-2173-179e-ee55-838e254491f5@philkern.de> <[ðŸ”Ž]Â 20181226183111.GY6770@portux.naturalnet.de>


On 26/12/2018 19:31, Dominik George wrote:
Of course you can use testing without having sid available, that's the 
point of testing[1]. I think there's a misunderstand about testing 
lurking here, too. And the requirement of backports for the package to 
be in testing is also to get a sane upgrade path from stable to 
next-stable. So you have to support your thing alongside testing, too. 
At least during the freeze, but optimally shortly after the release has 
been cut.
For backports the general supportability assumption is that you provide 
a sane upgrade path from stable to the backports and from the backport 
to the next stable (optimally the same package). Once you take the 
presence of the stable package out of the mix, it becomes weird. How 
long do you need to preserve compatibility code? How does an agile 
package that does not fit Debian's release cycle cater to these 
requirements?
Just discounting that on the grounds of "that's normal for backporting" 
if it's unique to your proposal is not quite satisfactory to me.
[1] You can make the argument that there's a problem with security 
update. But that's why the urgency system exists and maintainers can 
declare that a certain package needs to migrate with minimal waiting 
time. And most of the time (not always) the exploits start to 
materialize later.