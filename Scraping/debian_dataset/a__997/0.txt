To : Russ Allbery <rra@debian.org>
Subject : Re: Depends/Recommends from libraries
From : Ian Jackson <ijackson@chiark.greenend.org.uk>
Date : Tue, 21 Mar 2017 12:36:16 +0000
Message-id : 22737.7744.474222.842821@chiark.greenend.org.uk
In-reply-to : <[ðŸ”Ž]Â 87d1dqfh41.fsf@hope.eyrie.org>
References : <[ðŸ”Ž]Â 20170308223353.foxl4gg5pl5ratoo@angband.pl>	<[ðŸ”Ž]Â 87o9xbxhd2.fsf@hope.eyrie.org>	<[ðŸ”Ž]Â 22721.37093.430317.401024@chiark.greenend.org.uk>	<[ðŸ”Ž]Â 87d1dqfh41.fsf@hope.eyrie.org>


Russ Allbery writes ("Re: Depends/Recommends from libraries"):
> I think this would be a great way of introducing spurious bugs in our
> distribution from [developers] who don't happen to read the README
> file and miss dependencies they actually need because they're used
> to Debian properly picking up shared library dependencies and to the
> dependencies of any given package being fully self-contained.  Both
> of which, I should add, are major *features* of our distribution
> that many of us have worked very hard to achieve.  I'm opposed.
> 
> Now, if this were taken a further step so that dpkg-shlibdeps would
> provide some mechanism to *automatically* add those downstream
> dependencies to packages that depend on the library unless the
> dependencies were explicitly suppressed, I wouldn't be as strongly
> opposed.
This seems doable to me.
>  It still feels like needless complexity to me,
Others have explained why this is a real problem.
> relabeling all of
> those libraries to have a new dependency field
The onward-dependency information for use by dpkg-shlibdeps wouldn't
be a control file field, I think.  It would be elsewhere in bar's
source package, and end up as a dropping in libbar-dev.deb.
Ian.