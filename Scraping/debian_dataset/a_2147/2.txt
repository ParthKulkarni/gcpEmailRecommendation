To : Arturo Borrero Gonzalez <arturo@debian.org>
Subject : Re: website maintenance
From : Michael Lustfield <debian@lustfield.net>
Date : Tue, 16 May 2017 02:22:00 -0500
Message-id : CAL4L7=ARBrSxJoEeeN-i6sVx=kJpVxem7-mDK1zbZHyViO+8gQ@mail.gmail.com
In-reply-to : <[ðŸ”Ž]Â CAOkSjBgNGjnsxf7YPKFnDYda3WrGyMQPWEcaYaYz-YfQ1NY4=g@mail.gmail.com>
References : <[ðŸ”Ž]Â 20170515101225.GH32244@gpm.stappers.nl> <[ðŸ”Ž]Â CAOkSjBgNGjnsxf7YPKFnDYda3WrGyMQPWEcaYaYz-YfQ1NY4=g@mail.gmail.com>


>>> Our users are really complaining about our look&feel in the web
I expect that less than ten people on earth would disagree with you.
> Unfortunately, I don't have the web abilities (web technologies,
> design, UX, whatever) that this task requires.
[..]
> Someone have suggested to invest a bit of our money into some paid
> work. I believe this idea is something worth exploring too.
I've been working on packaging gitea but I'm reaching a point where
too much needs to change in either unstable or experimental for it to
be sensible until after freeze, so I now have some time available.
I don't claim to be an expert by any means, but I do have some
background in website development and know of some resources that
could be helpful. (google can fill in any blanks here, no I'm not
proud of my PHP knowledge)
If we're going to seriously discuss reworking www.debian.org, can we
talk about what changes actually need to take place? Let's start the
requirements gathering phase, ya? What functions does the current
implementation not provide? What do we need to see out of the next
option? We have a lot of web services that share a similar theme. The
minimalistic design provides an easy way to keep a unified theme
across all services and makes it easy to render correctly across all
browsers regardless of the latest and greatest ecmascript or $foo. You
can safely assume Debian is a group of people that will not be okay
with requiring javascript to correctly render pretty much anything
[1].
I'm sure it's been discussed before, but I don't know what functional
requirements we face, what services utilize the same theme/design,
what their templates need to look like, what kind of resources are
typically accessed and under what load and why, how content updates
are deployed, etc. Before even beginning any work, I think it's
important the requirements phase for a project like this be completed
in relatively painful detail.
[1] That's why our updates are so clean. ;)