To : Ben Hutchings <ben@decadent.org.uk>, 817236@bugs.debian.org
Subject : Bug#817236: schroot: no access to pseudo-terminals in new chroots
From : Simon McVittie <smcv@debian.org>
Date : Sun, 5 Mar 2017 19:41:14 +0000
Message-id : 20170305194114.ijsjyo4etvgdimay@perpetual.pseudorandom.co.uk
Reply-to : Simon McVittie <smcv@debian.org>, 817236@bugs.debian.org
In-reply-to : <[ðŸ”Ž]Â 20170305135614.2boothzezjjh3lev@perpetual.pseudorandom.co.uk>
References : <145751413473.6331.1324267589463806688.reportbug@deep-thought.43-1.org> <1478529616.1727.13.camel@decadent.org.uk> <20161120070325.GL21968@mraw.org> <20161125175431.df7uxctimmdfuw6p@bongo.bofh.it> <1480156058.16599.52.camel@decadent.org.uk> <20170215105556.e6bewv3afshgn3es@perpetual.pseudorandom.co.uk> <20170226143131.w7rfkfazjzyuzk2t@perpetual.pseudorandom.co.uk> <[ðŸ”Ž]Â 20170305135614.2boothzezjjh3lev@perpetual.pseudorandom.co.uk>


I have filed #856877 against schroot suggesting mounting a new instance
of /dev/pts, effectively making schroot behave less like chroot and more
like a container manager in this particular respect.
However, that causes a nasty regression for interactive use (ttyname()
won't report that the interactive tty outside the container is a tty,
because it has no name inside the container), so I don't think it can
be applied unless schroot also changes to give the invoked shell a
pty inside the container as its stdin/stdout/stderr
(like systemd-nspawn does).
So I think it is best if this is solved in debootstrap, to the extent
that it can be.
I attach extended test coverage in debootstrap's autopkgtests for what
I've proposed schroot should consider doing, and for what I'm going to
propose pbuilder does. Up to you whether these are applied or not,
given the down side for interactive use, but I've successfully tested
them in a sid lxc container (lxc from jessie-backports, under the jessie
kernel), in a sid qemu VM (with sid kernel), and in a sid schroot (in
a jessie VM with the jessie kernel).
    S
>From 322e9ee8c4d7e713df83257913ee6c6ba4a9daea Mon Sep 17 00:00:00 2001
From: Simon McVittie <smcv@debian.org>
Date: Sun, 5 Mar 2017 18:27:41 +0000
Subject: [PATCH 2/2] autopkgtest: Exercise possible future sbuild behaviour
 (#856877)
---
 debian/tests/debian-testing        |  3 ++
 debian/tests/fake/schroot-proposed | 57 ++++++++++++++++++++++++++++++++++++++
 2 files changed, 60 insertions(+)
 create mode 100755 debian/tests/fake/schroot-proposed
diff --git a/debian/tests/debian-testing b/debian/tests/debian-testing
index 928e4e1..65ee196 100755
--- a/debian/tests/debian-testing
+++ b/debian/tests/debian-testing
@@ -113,6 +113,9 @@ sub check_chroot {
         $reference);
 
     check_fake_schroot(%params, reference => $reference);
+    check_fake_schroot(%params, reference => $reference, version => 'proposed');
+    check_fake_schroot(%params, reference => $reference, version => 'proposed',
+        extra_argv => ['--sbuild']);
 
     # https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=817236
     if (Dpkg::Version->new($params{kernel}) < Dpkg::Version->new('4.7') &&
diff --git a/debian/tests/fake/schroot-proposed b/debian/tests/fake/schroot-proposed
new file mode 100755
index 0000000..96d4309
--- /dev/null
+++ b/debian/tests/fake/schroot-proposed
@@ -0,0 +1,57 @@
+#!/bin/sh
+# fake/schroot-proposed -- emulate proposed mount behaviour for schroot
+#
+# Copyright Â© 2017 Simon McVittie
+# SPDX-License-Identifier: MIT
+# (see debian/copyright)
+
+set -e
+
+# /etc/schroot/default/fstab
+bind_dev=yes
+
+while true; do
+	case "$1" in
+		(--sbuild)
+			shift
+			# /etc/schroot/sbuild/fstab
+			bind_dev=no
+			;;
+		(*)
+			break
+	esac
+done
+
+chroot="$1"
+shift
+if test -z "$chroot" || test -z "$1"; then
+	echo "Usage: $0 CHROOT COMMAND...">&2
+	exit 2
+fi
+
+[ "$bind_dev" = no ] || mount --bind /dev "$chroot/dev"
+mount -t devpts -o rw,newinstance,ptmxmode=666,mode=620,gid=5 /dev/pts "$chroot/dev/pts"
+
+ls -l "$chroot/dev/ptmx" | sed -e 's/^/# fake-schroot: /' >&2
+ls -l "$chroot/dev/pts/ptmx" | sed -e 's/^/# fake-schroot: /' >&2
+
+mounted_ptmx=no
+
+if [ -e "$chroot/dev/pts/ptmx" ] && \
+        [ -e "$chroot/dev/ptmx" ] && \
+        ! [ "$chroot/dev/pts/ptmx" -ef "$chroot/dev/ptmx" ]; then
+    mount --bind "$chroot/dev/pts/ptmx" "$chroot/dev/ptmx"
+    mounted_ptmx=yes
+fi
+
+ls -l "$chroot/dev/ptmx" | sed -e 's/^/# fake-schroot: /' >&2
+ls -l "$chroot/dev/pts/ptmx" | sed -e 's/^/# fake-schroot: /' >&2
+
+e=0
+chroot "$chroot" "$@" || e=$?
+
+[ "$mounted_ptmx" = no ] || umount "$chroot/dev/ptmx"
+umount "$chroot/dev/pts"
+[ "$bind_dev" = no ] || umount "$chroot/dev"
+
+exit "$e"
-- 
2.11.0