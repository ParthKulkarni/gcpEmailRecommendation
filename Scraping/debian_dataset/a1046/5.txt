To : debian-devel@lists.debian.org
Subject : Re: enforcing an UTF8 locale while building a package
From : Simon McVittie <smcv@debian.org>
Date : Wed, 10 Jan 2018 23:41:13 +0000
Message-id : 20180110234113.GA22306@perpetual.pseudorandom.co.uk
In-reply-to : <[ðŸ”Ž]Â 1515507743.214532.1229294576.7E162B19@webmail.messagingengine.com>
References : <[ðŸ”Ž]Â 20180109133153.k2yrfmcmeq32awcu@bulldog.preining.info> <[ðŸ”Ž]Â 1515507743.214532.1229294576.7E162B19@webmail.messagingengine.com>


On Tue, 09 Jan 2018 at 19:52:23 +0530, Chris Lamb wrote:
> Just as one example, a timezone library that did not work properly
> in timezones beyond UTC+0800, etc.
That's a bug, sure, but is it necessarily a release-critical bug? The
answer is usually "it's up to the maintainer", whereas FTBFS on a
reasonable system under reasonable conditions is automatically RC by
policy, and even if it wasn't, FTBFS on a buildd whose architecture
previously built OK has RC-like implications on testing migration.
If we held, for instance, gcc to this standard ("gcc must work properly
with all valid C inputs") then it would have a lot more RC bugs. Instead,
we accept that, while a bug-free compiler would be great, we aren't
going to have one any time soon, and expect the maintainers of other
software to work around bugs with -O0 or code changes if they need to.
A timezone library should be running its unit tests in lots of timezones
whether it's on the reproducible builds infrastructure or not, but
a tangentially related piece of software that happens to use a timezone
library during build shouldn't be responsible for verifying that its
timezone library works in all reasonable situations.
(Note the weasel word "reasonable", of course - arguably our buildds are
already unreasonable in various ways that make sense for compilation,
but less so for testing.)
    smcv