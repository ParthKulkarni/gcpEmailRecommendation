To : Ian Jackson <ijackson@chiark.greenend.org.uk>
Subject : Re: Feedback on 3.0 source format problems
From : Sean Whitton <spwhitton@spwhitton.name>
Date : Sun, 8 Jan 2017 21:27:37 -0700
Message-id : 20170109042737.waumiit3sjdqiglh@hephaestus.silentflame.com
In-reply-to : <[ðŸ”Ž]Â 22639.47074.971099.320107@chiark.greenend.org.uk>
References : <[ðŸ”Ž]Â 87h95ght4g.fsf@hope.eyrie.org> <[ðŸ”Ž]Â 87ful0q97e.fsf@thinkpad.rath.org> <[ðŸ”Ž]Â 20170103201509.s3swo4w666qeieow@iris.silentflame.com> <[ðŸ”Ž]Â 20170104021016.5xiymbf26uyymccl@jadzia.comodo.priv.at> <[ðŸ”Ž]Â 87lgurh7oa.fsf@hope.eyrie.org> <[ðŸ”Ž]Â 22636.58841.674428.944655@chiark.greenend.org.uk> <[ðŸ”Ž]Â 20170105201448.6wudflmzuv25c7xz@iris.silentflame.com> <[ðŸ”Ž]Â 22639.47074.971099.320107@chiark.greenend.org.uk>


Hello Ian,
On Fri, Jan 06, 2017 at 03:29:38PM +0000, Ian Jackson wrote:
> Sean Whitton writes ("Re: Feedback on 3.0 source format problems"):
> > Could you explain in general terms the difference between the
> > interchange and packaging-only branches
> 
> See modified diagram below.  Are the annotations I have added (and the
> name change) any help ?
Yes, thanks, I think I see most of what's going on now.  Thank you for
taking the time to draw the diagrams.  It's certainly an ingenious use
of git.
I take it that only the maintainer is meant to look at the
merging-baseline, and everyone else looks at the interchange view.  My
first worry is that pseudomerges are weird.  In fact, I've never seen
them outside of weird Debian git workflows :)  Someone might look at the
interchange view, see all these pseudomerges, and have no idea how to
interpret what the Debian maintainer is doing.  Do you have any thoughts
on mitigating the potential confusion?
The advantage of thinking of the Debian packaging as just another branch
of development is that the branching structure itself is easy to
interpret for anyone who uses git.  "Ah, I see they merged my release
tag into their branch, they must have been bringing Debian up-to-date
with the latest release" -- this is very natural for git users.  We call
it "packaging a new upstream release" but it's easier for an outsider to
think of it as bringing a feature branch up-to-date with the latest
mainline developments.
-- 
Sean Whitton
signature.asc