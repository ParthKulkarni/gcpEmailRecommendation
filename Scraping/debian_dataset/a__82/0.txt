To : debian-devel@lists.debian.org
Subject : Re: Converting to dgit
From : Scott Kitterman <debian@kitterman.com>
Date : Wed, 04 Jan 2017 00:52:44 +0000
Message-id : 9F7A6681-A43A-4950-BC90-522BCDF880A7@kitterman.com
In-reply-to : <[ðŸ”Ž]Â 87zij7hdek.fsf@hope.eyrie.org>
References : <[ðŸ”Ž]Â 20170103194117.7bal6rcnv4v2yhus@iris.silentflame.com> <[ðŸ”Ž]Â 87zij7hdek.fsf@hope.eyrie.org>


On January 3, 2017 7:33:39 PM EST, Russ Allbery <rra@debian.org> wrote:
>Sean Whitton <spwhitton@spwhitton.name> writes:
>> On Tue, Jan 03, 2017 at 10:36:22AM -0800, Nikolaus Rath wrote:
>
>>> I still haven't really made up my mind if I want to use
>git-maint-merge
>>> or git-dpm. Russ recently raised a valid point with the Debian
>>> modifications over-time becoming all tangled up and impossible to
>>> separate.
>
>> I also read Russ's e-mail, but I'm not yet convinced that powerful
>tools
>> like `git diff` and `git log` won't be able to give you the
>information
>> you need pretty quickly.  It might take a little time to craft the
>right
>> command, but that is easily outweighed by the time saved curating a
>> patch series.
>
>Curating a patch series is only 5% slower than commiting directly to
>the
>Git repository to me.  I just have to remember to gbp pq import before
>making new changes, gbp pq export when I'm done, and once in a great
>while
>I have to do a small bit of rebasing to merge changes back into other
>patches.  It's quite easy for someone who is very familiar with Git,
>using
>good tools.  That 5% would be even less if I did it more often.
>
>I'm unconvinced that any of that work would really be avoided via other
>mechanisms.  The most time-consuming part is rebasing and squashing
>related changes together into one coherent diff, but that's going to be
>just as hard with any of these tools since the hard work is semantic
>and
>requires thought, not just repository manipulation.
And the thing that gets source delivered to users is the source package, not a git repository.  A proper set of patches is far more understandable than an undifferentiated pile of diff.
Sometimes I feel like people lose track of the fact that the VCS is a means to an end and not the end target of the work we're doing. 
Scott K