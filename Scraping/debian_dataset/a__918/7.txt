To : Steve McIntyre <steve@einval.com>, Cyril Brulebois <kibi@debian.org>
Subject : Re: Install fwupd on a default installation
From : Philipp Kern <pkern@debian.org>
Date : Thu, 27 Dec 2018 02:48:48 +0100
Message-id : bbb08702-1a74-0591-447e-97578f3341ed@philkern.de
In-reply-to : <[ðŸ”Ž]Â 20181226213259.dak22q4i2ynfii5q@tack.einval.com>
References : <[ðŸ”Ž]Â d6a8ecec257f10ab843a0a7897d307e2@debian.org> <[ðŸ”Ž]Â 20181226204815.y4qrukcbc6zxcio7@mraw.org> <[ðŸ”Ž]Â 20181226205753.xux4lqkzdqkjfgec@tack.einval.com> <[ðŸ”Ž]Â 20181226212735.bt2l6xzv4jnc7yjf@mraw.org> <[ðŸ”Ž]Â 20181226213259.dak22q4i2ynfii5q@tack.einval.com>


On 26/12/2018 22:32, Steve McIntyre wrote:
Interestingly enough the vendor signs a blob (CAB file) and LVFS throws 
it away and re-signs the blob with its own key. But then again I think 
the base assumption is that the contained firmware images are themselves 
signed as well and the BIOS does a check before ingesting them.
Obviously you end up with the usual concerns like the repository being 
able to hold back updates from certain clients. The website's code is 
supposedly available on https://github.com/hughsie/lvfs-website/ though 
and I suppose a transparency effort could solve that particular problem, 
too.
Oh yes. Not just that, also finding the right image to apply and then 
figuring out how the hell to apply it is a solved problem with EFI-based 
fwupdate.
Kind regards
Philipp Kern