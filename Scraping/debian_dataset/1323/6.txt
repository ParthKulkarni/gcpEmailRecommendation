To : submit@bugs.debian.org
Subject : Bug#850182: Please disable TSX in stretch and backport to jessie
From : Ian Jackson <ijackson@chiark.greenend.org.uk>
Date : Wed, 4 Jan 2017 19:04:21 +0000
Message-id : 22637.18229.133564.690735@chiark.greenend.org.uk
Reply-to : Ian Jackson <ijackson@chiark.greenend.org.uk>, 850182@bugs.debian.org
In-reply-to : <[ðŸ”Ž]Â 842a485a-435b-447a-adb6-6f39f7fab5b7@debian.org>
References : <20161228002324.i5sh2bbu7lrts3rz@localhost>	<[ðŸ”Ž]Â 842a485a-435b-447a-adb6-6f39f7fab5b7@debian.org>


Package: eglibc
Gilles Filippini writes ("Request for help - scilab segfaults with TSX"):
> I've just noticed this RC bug [1] against scilab. [...]
> [1] https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=844134
> [2] https://lists.debian.org/debian-devel/2016/11/threads.html#00210
...
> I don't have access to any box with TSX enabled, and failed to find any
> porterbox as well. [...]
amd64 with TSX is for the purposes of pthreads like a new
architecture: the locking primitives behave differently and expose
extra bugs.
These extra bugs will be discovered only by chance (as we see in that
bug report and in the earlier bugs #843324 and maybe #842796).  As
more TSX-capable hardware becomes available, we will discover more of
them, during the life of stretch, when they are hard to fix.
Also, we don't have the capability to debug them.  I don't think we
can have a release architecture for stretch that has no porterboxes.
So please would the libc be changed not to make use of these features
for stretch.  The downsides will be somewhat lower performance and
not detecting some preexisting bugs; but the upsides are not shipping
undetected bugs, and not throwing useful software out of Debian.
Please would you make a decision quickly.
Regards,
Ian.
-- 
Ian Jackson <ijackson@chiark.greenend.org.uk>   These opinions are my own.
If I emailed you from an address @fyvzl.net or @evade.org.uk, that is
a private address which bypasses my fierce spamfilter.