To : debian-devel@lists.debian.org
Subject : Re: MBF proposal: python modules that fail to import
From : Herbert Fortes <terberh@gmail.com>
Date : Mon, 16 Apr 2018 16:14:21 -0300
Message-id : 1e6dbaac-295f-f017-9921-2fe8ae00c2a0@gmail.com
In-reply-to : <[ðŸ”Ž]Â 20180415185633.GA2011@alf.mars>
References : <[ðŸ”Ž]Â 20180415185633.GA2011@alf.mars>


Hi,
Em 15-04-2018 15:56, Helmut Grohne escreveu:
> Hi,
> 
> I was surprised to find a python module that failed to import thinking
> that our qa would catch this. So I wondered how many other python
> modules would fail to import and started a little yak shaving journey.
> 
> It turns that this happens for 251 python modules. Since failure to
> import the main module of a python library indicates that the modules
> doesn't work at all, I propose to file this at severity serious.
> 
> Actually, there is autodep8 at ci.debian.net testing this already. It
> has a whitelist
> (https://salsa.debian.org/ci-team/debian-ci-config/blob/master/cookbooks/debci/files/default/whitelist-python.txt)
> of around 800 packages opting in to import testing. Unfortunately, the
> results do not seem to be synced into tracker.d.o. The main difficulty
> is determining the name of the python module. Sometimes capitalization
> differs from the package name. Other times a completely different name
> is used. Thus I am attaching a genlist.py that tries to compute the
> module name and it succeeds in about 4300 packages.
> 
> Thus I tried installing and importing all of these and figured that 251
> packages would fail. The process of installing and importing is rather
> simple and implemented in autodep8 already, so I'm not attaching my
> crude hacks here. Nonetheless I am attaching a draft of the proposed bug
> reports since each of them includes a specific error. I also include a
> dd-list of affected packages.
> 
> The most common issues is missing dependencies. Very often,
> pkg_resources is missing. Also six, numpy, tkinter and distutils are
> missing several times. A fair number of strange exceptions is included
> as well. When dealing with C extensions, we are faced with two
> segmentation faults, one assertion failure and three missing symbols.
>
Package python3-dj-static is on the dd-list. But I can import it.
# on a bananapi
$ python3
Python 3.5.3 (default, Jan 19 2017, 14:11:04) 
[GCC 6.3.0 20170124] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> import static     # dependency
>>> import dj_static  # module
>>> 
If I understood correct (about the test), please note the diff:
python3-dj-static  # Debian package
dj_static          # module
The package name uses '-' and the module '_'.