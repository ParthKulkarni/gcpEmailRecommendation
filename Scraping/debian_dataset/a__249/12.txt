To : Lumin <cdluminate@gmail.com>
Subject : Re: julia_1.0.0-1_amd64.changes REJECTED
From : Wouter Verhelst <wouter@debian.org>
Date : Tue, 25 Sep 2018 17:03:01 +0200
Message-id : 20180925150301.GE30552@grep.be
In-reply-to : <[ðŸ”Ž]Â 20180925144043.GA9441@Asuna>
References : <E1fpdc2-000J9X-7u@fasolo.debian.org> <20180815094855.GA10179@Asuna> <20180816195510.wf2bzmhq3bwol2fc@shell.thinkmo.de> <20180823074909.GB2641@Asuna> <[ðŸ”Ž]Â 20180925144043.GA9441@Asuna>


Hi Lumin,
On Tue, Sep 25, 2018 at 02:40:43PM +0000, Lumin wrote:
> > What I'm emphasizing here is, the debug info in those shared objects
> > are intensionally kept to preserve a good user experience and
> > avoid increasing maintainance burden.
> > 
> > This is the expected backtrace from the code snippet:
> > 
> > > ERROR: could not open file /tmp/y/____nonexistent_file
> > > Stacktrace:
> > >  [1] include at ./boot.jl:317 [inlined]
> > >  [2] include_relative(::Module, ::String) at ./loading.jl:1038
> > >  [3] include(::Module, ::String) at ./sysimg.jl:29
> > >  [4] include(::String) at ./client.jl:388
> > >  [5] top-level scope at none:0
> > 
> > This is the actual backtrace after stripping the shared objects:
> > 
> > > ERROR: could not open file /tmp/y/____nonexistent_file
> > > Stacktrace:
> > >  [1] include(::String) at ./client.jl:388
> > >  [2] top-level scope at none:0
> > 
> > Stripping the shared object is bad to both us Julia maintainers and
> > Julia upstream, because the users is always getting a problematic
> > backtrace and the bug reports will always possibly be problematic.
So tell them to install the debug symbols package and reproduce the bug. You'll
get the expected backtrace then. If they can't figure it out, tell them to send
you their core dump, install the symbols package on your laptop, and
load the core dump with symbols loaded.
There's really no reason to ship debug symbols in the "normal" binary
package in today's world.
-- 
Could you people please use IRC like normal people?!?
  -- Amaya Rodrigo Sastre, trying to quiet down the buzz in the DebConf 2008
     Hacklab