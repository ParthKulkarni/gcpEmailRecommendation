To : debian-devel@lists.debian.org, debian-hurd@lists.debian.org
Subject : Re: Porting rust
From : Samuel Thibault <sthibault@debian.org>
Date : Wed, 21 Nov 2018 21:49:47 +0100
Message-id : 20181121204946.ysaeubl22xdg727c@function
Mail-followup-to : debian-devel@lists.debian.org,	debian-hurd@lists.debian.org
In-reply-to : <[ðŸ”Ž]Â 20181121203935.GB1796@localhost>
References : <[ðŸ”Ž]Â b7971206-ce39-1cf5-b6cd-861b4f2a1f34@physik.fu-berlin.de> <[ðŸ”Ž]Â 20181106050228.GA21413@localhost> <[ðŸ”Ž]Â 20181120200023.pruveroljebyjq54@function> <[ðŸ”Ž]Â 20181121203935.GB1796@localhost>


Josh Triplett, le mer. 21 nov. 2018 12:39:35 -0800, a ecrit:
> I'm not an expert in that mechanism, but my understanding is that the
> vast majority is shared among multiple systems.
> 
> There probably *should* be a way to autogenerate these, but I don't
> think there is. But I wouldn't be surprised if you could rely *heavily*
> on the Linux glibc support.
Nope :)
Most of the structures have subtly different content, for various
reasons.
I actually rather based on BSD, on which the Hurd happens to base rather
than on Linux.
> I'd suggest starting with src/liblibc/libc-test and trying to get those
> tests running on Hurd, and then doing test-driven development until all
> the tests pass.
Before getting to this, a lot already has to be written. I have indeed
started with copying/pasting structures from BSD ports, just to get the
thing going, but even that way a lot has to be copy/pasted before just
getting libc to build.
Samuel