To : Lennart Sorensen <lsorense@csclub.uwaterloo.ca>
Subject : Re: Do I have to do anything to make sure ext4lazyinit works as being advertised ?
From : shirish ‡§∂‡§ø‡§∞‡•Ä‡§∑ <shirishag75@gmail.com>
Date : Wed, 1 Feb 2017 22:20:19 +0530
Message-id : CADdDZRm7Q878sQMVPp9q1H34U+y6XPtMkB+L8gAv7qgYrG1_8w@mail.gmail.com
In-reply-to : <[üîé]¬†20170201153052.GC17365@csclub.uwaterloo.ca>
References : <CADdDZRmHxC+cjoOZT5Pw78xcwtHuQpLLX6W3ON2xxfLQexuj_A@mail.gmail.com> <20170131195610.GA17365@csclub.uwaterloo.ca> <CADdDZRkc0F7OcCJfa==z=NAh8b2zeK8_PTZALq1suBo124RD9A@mail.gmail.com> <[üîé]¬†CADdDZRk6_TccudrxVqkO=tDKBfNiXit7wnaVYm8vVLaCbFGUtg@mail.gmail.com> <[üîé]¬†20170201153052.GC17365@csclub.uwaterloo.ca>


at bottom :-
On 01/02/2017, Lennart Sorensen <lsorense@csclub.uwaterloo.ca> wrote:
> On Wed, Feb 01, 2017 at 02:27:39PM +0530, shirish ‡§∂‡§ø‡§∞‡•Ä‡§∑ wrote:
<snipped>
>>> My patch was fix for bug which was spotted on large disk arrays,
>>> 36 in my case. So itable initialization was active all the time
>>> while holding global lock.
>>
>> From this, it seems there aren't any limits except for 10% of whatever
>> the link between
>
> Why would a large array make a difference to the algorithm if it aims
> to use 1/10 of the bandwidth?
Hi Lennart,
I dunno (not an expert in large disk arrays) . For this you would have
to look at
https://patchwork.kernel.org/patch/9285509/ titled -
"Patchwork ext4/023: add regression test for ext4lazyinit_task deadlock V2"
>From the title it seems some sort of deadlock was occurring. For what
reason can probably be garnered by reading the code or/and talking
with
Dmitry Monakhov <dmonakhov@openvz.org> who wrote that patch.
FWIW he wrote couple of patches this month as well -
https://patchwork.kernel.org/project/fstests/list/?submitter=172391
> --
> Len Sorensen
>
-- 
          Regards,
          Shirish Agarwal  ‡§∂‡§ø‡§∞‡•Ä‡§∑ ‡§Ö‡§ó‡•ç‡§∞‡§µ‡§æ‡§≤
  My quotes in this email licensed under CC 3.0
http://creativecommons.org/licenses/by-nc/3.0/
http://flossexperiences.wordpress.com
EB80 462B 08E1 A0DE A73A  2C2F 9F3D C7A4 E1C4 D2D8