To : Ian Jackson <ijackson@chiark.greenend.org.uk>
Subject : RE:Feedback request about the Alba Upstream to Debian packaging effort
From : PICCA Frederic-Emmanuel <frederic-emmanuel.picca@synchrotron-soleil.fr>
Date : Sun, 3 Jun 2018 13:07:26 +0000
Message-id : A2A20EC3B8560D408356CAC2FC148E530107E07747@SUN-DAG4.synchrotron-soleil.fr
In-reply-to : <[ðŸ”Ž]Â 23314.41678.167508.612477@chiark.greenend.org.uk>
References : <[ðŸ”Ž]Â A2A20EC3B8560D408356CAC2FC148E530107E073C7@SUN-DAG4.synchrotron-soleil.fr>,<[ðŸ”Ž]Â 23314.41678.167508.612477@chiark.greenend.org.uk>


Hello Ian
>Â I didn't have a massive amount of time to review this in detail, but
>Â it sounds cool.  I looked at the slides in the pdf [5] above.
>Â (Shame there isn't a technical report...)
the technical part is in the gitlab-ci.yml file :).
> I reviewed the version number proposal and it seems sound to me.
It just comes to my mind that Maybe it does not fit well with  my convention for exeprimental numbering whcih is
blablab_x.y.z-t~exp1
so maybe the best way would be to use 
blalbla_x.y.z-t~~alba+1
>Â I have some observations:
>Â You probably want to keep the delta between the upstream and the
> debianised branch as small as possible.
Yes you are right this should be kept as small as possible.
>Â On build systems and debian/ruless: if (i) you can get as much of your
> upstream build system looking as standard as possible (ii) you can get
>Â as much of the rest supported by dh as possible, then your
> debian/rules files could possibly be very small indeed.
Yes
> debian/changelog is a bit of a pain and you will have to write code to
> generate it.  [gbp-]dch can be helpful.
gbp allows to generate this automatically, but this is true that the quality of the changelog is not necessary good.
Most of the time because the commit are not that great either...
> Ideally you would treat debian/control as an output file: generate it
> entirely from upstream stuff, using some tool, and commit the result
> as a committed-artefact to the debianised branch.
I agreed with you that it would be great to have a way to generate a debian package from the upstream git repository and  some minimalist metadata purely descriptive.
> Your debianisation tool becomes part of the source code for your
> packages.  You need to publish it in your repository, track the
> version used, etc.  So it probably needs to be debianised.  I think
> you need to mention it in Built-Using or something similar.
good point, but for now this is just the gitlab file.
Do you think that the guix way can be modified in order to generate Debian packages instead of guix binaries ?
I like a lot the idea to maintain only the metadata in a repository.
Indeed in our case scientific software are most of the time not that standard and need lot's of tweak in order to be packages.
>Â Finally, and VERY CONTROVERSIALLY: consider whether you want to bother
> with source packages.  You could just use git branches instead.
> Source packages are a pain.
Just use dgit ;)
> Good luck and have fun!
thanks
Frederic