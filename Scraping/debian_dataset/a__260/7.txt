To : debian-devel@lists.debian.org
Subject : Re: Repackaging upstream source with file modifications?
From : Jonas Smedegaard <jonas@jones.dk>
Date : Mon, 12 Feb 2018 14:11:14 +0100
Message-id : 151844107485.17246.9939630120677736047@auryn.jones.dk
In-reply-to : <[ðŸ”Ž]Â 20180212121804.phrtodbw4ypzhlov@riva.ucam.org>
References : <[ðŸ”Ž]Â 20180212102833.avzibyusa25xl5o2@riva.ucam.org> <[ðŸ”Ž]Â 20180212104216.GA29270@perpetual.pseudorandom.co.uk> <[ðŸ”Ž]Â 20180212112250.ufnr6cuudtozy2fx@riva.ucam.org> <[ðŸ”Ž]Â 20180212120950.j25tcpidsq53c4uy@mail.wookware.org> <[ðŸ”Ž]Â 20180212121804.phrtodbw4ypzhlov@riva.ucam.org>


Quoting Colin Watson (2018-02-12 13:18:04)
> On Mon, Feb 12, 2018 at 12:09:50PM +0000, Wookey wrote:
> > On 2018-02-12 11:22 +0000, Colin Watson wrote:
> > > Huh.  I hadn't thought of that option, but it seems peculiar and
> > > excessively baroque (it basically splits the patch into a remove and an
> > > add, making it less obviously identical to the one submitted upstream
> > > and harder to keep track of in git).  Is there a strong reason to take
> > > that approach?
> > 
> > I'd have done the same as Simon. The main advantage is that it makes
> > the tarball free software, which we generally don't get any leeway
> > about
> 
> The same advantage is gained by simply patching the replacement code
> into the regenerated tarball in a single step, rather than removing in
> one step and adding in another.
The tarball should contain only upstream code.  Not patched code (then 
you arguably are making a fork).
Omitting some files when redistributing an upstream project is common 
and well-documented - please follow that same pattern.
 - Jonas
-- 
 * Jonas Smedegaard - idealist & Internet-arkitekt
 * Tlf.: +45 40843136  Website: http://dr.jones.dk/
 [x] quote me freely  [ ] ask before reusing  [ ] keep private
signature.asc