To : debian-devel@lists.debian.org
Subject : Re: no{thing} build profiles
From : Marvin Renich <mrvn@renich.org>
Date : Sun, 21 Oct 2018 13:46:48 -0400
Message-id : 20181021174648.hjwws2hwu3dcx536@basil.wdw
In-reply-to : <[ðŸ”Ž]Â 20181021171556.GD1586@belkar.wrar.name>
References : <[ðŸ”Ž]Â CAKTje6Hazu=FfHc9-YT7Ftyz0E9oUbJNf2NayvLiv9OOfS_zJg@mail.gmail.com> <[ðŸ”Ž]Â 8736t1axpr.fsf@marvin.43-1.org> <[ðŸ”Ž]Â 87sh10imog.fsf@web.de> <[ðŸ”Ž]Â 20181020171607.2khryydow7bnqfdc@shell.thinkmo.de> <[ðŸ”Ž]Â 87lg6s8nxb.fsf_-_@violet.siamics.net> <[ðŸ”Ž]Â 87va5vg13z.fsf@err.no> <[ðŸ”Ž]Â 154011468574.1793.17134216390366195697@auryn.jones.dk> <[ðŸ”Ž]Â pqhir3$558$1@blaine.gmane.org> <[ðŸ”Ž]Â 20181021161327.2fqaapm4yrp4564s@basil.wdw> <[ðŸ”Ž]Â 20181021171556.GD1586@belkar.wrar.name>


* Andrey Rahmatullin <wrar@debian.org> [181021 13:16]:
> On Sun, Oct 21, 2018 at 12:13:27PM -0400, Marvin Renich wrote:
> > The proper fix is to convince upstream to dynamically link at runtime
> > and disable some features if libgpgme is not available.
> dlopening a dependency is bad: for example, it doesn't allow distro
> builders to track the deps properly and with the symbol granularity.
Perhaps.  But that is simply a matter of tooling.  The appropriate
Recommends can be used to help track this, or the fact that dlopen is
used and with what libraries could be added to the source package.  And
this is specifically a distro issue, not a behavioral correctness issue.
And this is an argument that I don't feel is worth continuing because
even if Debian put the effort into changing packaging practices to
handle this better, we will never get a significant following of
upstreams willing to use dlopen when appropriate.
On the other hand, your comment emphasizes even more my point that
library packages should not Depend on packages they use.
...Marvin