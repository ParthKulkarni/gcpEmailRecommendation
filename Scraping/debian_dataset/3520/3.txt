To : debian-devel@lists.debian.org
Subject : Re: Debian part of a version number when epoch is bumped
From : Lars Wirzenius <liw@liw.fi>
Date : Wed, 14 Feb 2018 21:11:04 +0200
Message-id : 1518635464.22059.1.camel@liw.fi
In-reply-to : <[üîé]¬†m3a7wbo3vy.fsf@luffy.cx>
References : <[üîé]¬†df10affbd1f8145c3e88b168192d6b37@debian.org>	 <[üîé]¬†23165.50722.426714.206909@chiark.greenend.org.uk>	 <[üîé]¬†d12deea0-3b8b-021b-c16f-8b9e4f0ba455@philkern.de>	 <[üîé]¬†877ermqdu2.fsf@hope.eyrie.org>	 <[üîé]¬†18f4b551-663c-4833-f89d-b9867c6b0be5@philkern.de>	 <[üîé]¬†20180209192210.GC1829@belkar.wrar.name>	 <[üîé]¬†CAAajCMaiQJV6YUrKSGtMo9L=uw7AocTHL51kKsoR1q4u_WNC0g@mail.gmail.com>	 <[üîé]¬†20180212022314.GB24590@gaara.hadrons.org> <[üîé]¬†20180214115315.GB8308@grep.be>	 <[üîé]¬†87eflnybir.fsf@luffy.cx>	 <[üîé]¬†20180214135407.on325smdsbofe4qm@khazad-dum.debian.net>	 <[üîé]¬†1518617345.25962.6.camel@liw.fi> <[üîé]¬†m3a7wbo3vy.fsf@luffy.cx>


On Wed, 2018-02-14 at 18:52 +0100, Vincent Bernat wrote:
>  ‚ù¶ 14 f√©vrier 2018 16:09 +0200, Lars Wirzenius <liw@liw.fi>¬†:
> 
> > > > It's not only an infrastructure problem. If you Depends on X (>= 1.8),
> > > > this will be true with X 1:1.6 as well.
...
> That's exactly the point. You wanted X >= 1.8 and you get X 1.6.
I don't think that's what you said, or at least it was hard for me to
understand it that way.
> More concrete example (now a bit in the past). On Wheezy, you want to
> depend on a 1.8 JRE (you package independently). You put
> default-jre-headless (>= 1.8). Since you have forgotten about the epoch,
> this pulls Wheezy default-jre-headless (1:1.7-47+deb7u2). So you add the
> epoch to both your own package version default-jre-headless (1:1.8-1)
> and to the dependency. All good. You upgrade to Jessie and rebuild
> everything. Jessie comes with default-jre-headless (2:1.7-52) which
> shadows your default-jre-headless (1:1.8-1) package.
I think I now understand what you mean: you're actually worried not
that version numbers compare in illogical ways, but that people write
wrong versions in dependencies.
I don't think that has anything to do with epochs, and I don't think
getting rid of epochs would actually solve that problem. The root
cause for people getting version numbers wrong in dependencies, in my
expeience as a Debian developer, is that not all version numbers are
very simple, and that updating them is a manual task.
It's true that epochs make version numbers a little more complicated,
but not as much as sheer length. The median length of version numbers
in stretch is 8 characters, looking only at version numbers without an
epoch. Getting those wrong is very easy, even without epochs, and not
really harder than with epochs, in my experience. I admit an epoch may
trip someone, but it's not happening often enough that it's a problem
worth solving by getting rid of epochs, in my opinion.
I know of only two ways to get version numbers correct: automation and
testing. For shared libraries, we have automation. Maybe we can have
that for other classes of dependencies as well. For everything else,
we're going to need testing.
Automating all generation and updating of runtime and build time
depencies would be a good thing to have. Not an easy thing to achieve,
of course.
I, for one, would welcome a general AI for automating this. Skynet is
a worth it if we can get versioned dependencies right every time.signature.asc