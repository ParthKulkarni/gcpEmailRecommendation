To : debian-devel@lists.debian.org
Subject : Re: Too many Recommends (in particular on mail-transport-agent)
From : Afif Elghraoui <afif@debian.org>
Date : Tue, 6 Jun 2017 19:44:45 -0400
Message-id : eb9030fa-4af1-893e-7b4c-45d082b2553a@debian.org
In-reply-to : <[🔎] 149673854102.6622.4223194978994583805@auryn.jones.dk>
References : <[🔎] 6bcc08ee-e439-236f-240c-d30bf2495f5a@debian.org> <[🔎] 1496736835.6150.11.camel@gmail.com> <[🔎] 149673854102.6622.4223194978994583805@auryn.jones.dk>


على الثلاثاء  6 حزيران 2017 ‫04:42، كتب Jonas Smedegaard:
> Quoting Ghislain Vaillant (2017-06-06 10:13:55)
>>
>> Given this is a Python package, we should not even have to argue about 
>> package relationships. Setuptools metadata provides install_requires 
>> and extras_require, the former mapping to Depends, the latter to 
>> Suggests. Period.
>>
>> Your typical Python project README would instruct users to install the 
>> Python package via `pip install`. If one runs `pip install networkx`, 
>> the graphics dependencies do not get pulled. That alone is enough to 
>> justify that these dependencies should not go to Recommends.
>>
>> FYI, I have a similar problem with sympy (#861741), which pulls an 
>> insane amount of packages via chained Recommends.
> 
> We should certainly continue to align package relations with Debian 
> Policy - and therefore by extension continue to argue about that as 
> necessary to evolve Debian Policy:
> 
> Upstream (or other) package relation hints can be a valuable _aid_ in 
> resolving Debian package relations, but only that: An aid!
> 
> Debian packaging follows Debian Policy - other hints do not.
> 
Both good points, but upstream is in the best position to decide whether
something is a strong-yet-not-absolute-dependency (Recommends) of their
software. What Ghislain is saying about Python packages here makes a lot
of sense to me.
regards
Afif
-- 
Afif Elghraoui | عفيف الغراوي
http://afif.ghraoui.name